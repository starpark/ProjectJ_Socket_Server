// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ProjectJ {
PROTOBUF_CONSTEXPR C_VERIFY_TOKEN::C_VERIFY_TOKEN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_VERIFY_TOKENDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_VERIFY_TOKENDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_VERIFY_TOKENDefaultTypeInternal() {}
  union {
    C_VERIFY_TOKEN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_VERIFY_TOKENDefaultTypeInternal _C_VERIFY_TOKEN_default_instance_;
PROTOBUF_CONSTEXPR S_VERIFY_TOKEN::S_VERIFY_TOKEN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_VERIFY_TOKENDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_VERIFY_TOKENDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_VERIFY_TOKENDefaultTypeInternal() {}
  union {
    S_VERIFY_TOKEN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_VERIFY_TOKENDefaultTypeInternal _S_VERIFY_TOKEN_default_instance_;
PROTOBUF_CONSTEXPR C_LOBBY_CHAT::C_LOBBY_CHAT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.chat_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_LOBBY_CHATDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_LOBBY_CHATDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_LOBBY_CHATDefaultTypeInternal() {}
  union {
    C_LOBBY_CHAT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_LOBBY_CHATDefaultTypeInternal _C_LOBBY_CHAT_default_instance_;
PROTOBUF_CONSTEXPR S_LOBBY_CHAT::S_LOBBY_CHAT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.chat_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_LOBBY_CHATDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_LOBBY_CHATDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_LOBBY_CHATDefaultTypeInternal() {}
  union {
    S_LOBBY_CHAT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_LOBBY_CHATDefaultTypeInternal _S_LOBBY_CHAT_default_instance_;
PROTOBUF_CONSTEXPR C_LOBBY_REFRESH_ROOM::C_LOBBY_REFRESH_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_LOBBY_REFRESH_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_LOBBY_REFRESH_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_LOBBY_REFRESH_ROOMDefaultTypeInternal() {}
  union {
    C_LOBBY_REFRESH_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_LOBBY_REFRESH_ROOMDefaultTypeInternal _C_LOBBY_REFRESH_ROOM_default_instance_;
PROTOBUF_CONSTEXPR S_LOBBY_REFRESH_ROOM::S_LOBBY_REFRESH_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rooms_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_LOBBY_REFRESH_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_LOBBY_REFRESH_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_LOBBY_REFRESH_ROOMDefaultTypeInternal() {}
  union {
    S_LOBBY_REFRESH_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_LOBBY_REFRESH_ROOMDefaultTypeInternal _S_LOBBY_REFRESH_ROOM_default_instance_;
PROTOBUF_CONSTEXPR C_LOBBY_CREATE_ROOM::C_LOBBY_CREATE_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_LOBBY_CREATE_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_LOBBY_CREATE_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_LOBBY_CREATE_ROOMDefaultTypeInternal() {}
  union {
    C_LOBBY_CREATE_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_LOBBY_CREATE_ROOMDefaultTypeInternal _C_LOBBY_CREATE_ROOM_default_instance_;
PROTOBUF_CONSTEXPR S_LOBBY_CREATE_ROOM::S_LOBBY_CREATE_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/false
  , /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_.slot_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_LOBBY_CREATE_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_LOBBY_CREATE_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_LOBBY_CREATE_ROOMDefaultTypeInternal() {}
  union {
    S_LOBBY_CREATE_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_LOBBY_CREATE_ROOMDefaultTypeInternal _S_LOBBY_CREATE_ROOM_default_instance_;
PROTOBUF_CONSTEXPR C_LOBBY_ENTER_ROOM::C_LOBBY_ENTER_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_LOBBY_ENTER_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_LOBBY_ENTER_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_LOBBY_ENTER_ROOMDefaultTypeInternal() {}
  union {
    C_LOBBY_ENTER_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_LOBBY_ENTER_ROOMDefaultTypeInternal _C_LOBBY_ENTER_ROOM_default_instance_;
PROTOBUF_CONSTEXPR S_LOBBY_ENTER_ROOM::S_LOBBY_ENTER_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/false
  , /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_.slot_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_LOBBY_ENTER_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_LOBBY_ENTER_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_LOBBY_ENTER_ROOMDefaultTypeInternal() {}
  union {
    S_LOBBY_ENTER_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_LOBBY_ENTER_ROOMDefaultTypeInternal _S_LOBBY_ENTER_ROOM_default_instance_;
PROTOBUF_CONSTEXPR C_ROOM_READY_TO_RECEIVE::C_ROOM_READY_TO_RECEIVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_.slot_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_ROOM_READY_TO_RECEIVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_ROOM_READY_TO_RECEIVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_ROOM_READY_TO_RECEIVEDefaultTypeInternal() {}
  union {
    C_ROOM_READY_TO_RECEIVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_ROOM_READY_TO_RECEIVEDefaultTypeInternal _C_ROOM_READY_TO_RECEIVE_default_instance_;
PROTOBUF_CONSTEXPR S_ROOM_INFO::S_ROOM_INFO(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ROOM_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ROOM_INFODefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ROOM_INFODefaultTypeInternal() {}
  union {
    S_ROOM_INFO _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ROOM_INFODefaultTypeInternal _S_ROOM_INFO_default_instance_;
PROTOBUF_CONSTEXPR C_ROOM_LEAVE::C_ROOM_LEAVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_.slot_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_ROOM_LEAVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_ROOM_LEAVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_ROOM_LEAVEDefaultTypeInternal() {}
  union {
    C_ROOM_LEAVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_ROOM_LEAVEDefaultTypeInternal _C_ROOM_LEAVE_default_instance_;
PROTOBUF_CONSTEXPR S_ROOM_LEAVE::S_ROOM_LEAVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ROOM_LEAVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ROOM_LEAVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ROOM_LEAVEDefaultTypeInternal() {}
  union {
    S_ROOM_LEAVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ROOM_LEAVEDefaultTypeInternal _S_ROOM_LEAVE_default_instance_;
PROTOBUF_CONSTEXPR S_ROOM_OTHER_ENTER::S_ROOM_OTHER_ENTER(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.other_)*/nullptr
  , /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_.slot_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ROOM_OTHER_ENTERDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ROOM_OTHER_ENTERDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ROOM_OTHER_ENTERDefaultTypeInternal() {}
  union {
    S_ROOM_OTHER_ENTER _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ROOM_OTHER_ENTERDefaultTypeInternal _S_ROOM_OTHER_ENTER_default_instance_;
PROTOBUF_CONSTEXPR S_ROOM_OTHER_LEAVE::S_ROOM_OTHER_LEAVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_.slot_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ROOM_OTHER_LEAVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ROOM_OTHER_LEAVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ROOM_OTHER_LEAVEDefaultTypeInternal() {}
  union {
    S_ROOM_OTHER_LEAVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ROOM_OTHER_LEAVEDefaultTypeInternal _S_ROOM_OTHER_LEAVE_default_instance_;
PROTOBUF_CONSTEXPR C_ROOM_READY::C_ROOM_READY(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_.slot_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_ROOM_READYDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_ROOM_READYDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_ROOM_READYDefaultTypeInternal() {}
  union {
    C_ROOM_READY _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_ROOM_READYDefaultTypeInternal _C_ROOM_READY_default_instance_;
PROTOBUF_CONSTEXPR S_ROOM_READY::S_ROOM_READY(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.slot_index_)*/0
  , /*decltype(_impl_.is_ready_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ROOM_READYDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ROOM_READYDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ROOM_READYDefaultTypeInternal() {}
  union {
    S_ROOM_READY _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ROOM_READYDefaultTypeInternal _S_ROOM_READY_default_instance_;
PROTOBUF_CONSTEXPR C_ROOM_CHAT::C_ROOM_CHAT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.chat_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_ROOM_CHATDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_ROOM_CHATDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_ROOM_CHATDefaultTypeInternal() {}
  union {
    C_ROOM_CHAT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_ROOM_CHATDefaultTypeInternal _C_ROOM_CHAT_default_instance_;
PROTOBUF_CONSTEXPR S_ROOM_CHAT::S_ROOM_CHAT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.chat_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ROOM_CHATDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ROOM_CHATDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ROOM_CHATDefaultTypeInternal() {}
  union {
    S_ROOM_CHAT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ROOM_CHATDefaultTypeInternal _S_ROOM_CHAT_default_instance_;
PROTOBUF_CONSTEXPR S_ROOM_STANDBY_MATCH::S_ROOM_STANDBY_MATCH(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.count_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ROOM_STANDBY_MATCHDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ROOM_STANDBY_MATCHDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ROOM_STANDBY_MATCHDefaultTypeInternal() {}
  union {
    S_ROOM_STANDBY_MATCH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ROOM_STANDBY_MATCHDefaultTypeInternal _S_ROOM_STANDBY_MATCH_default_instance_;
PROTOBUF_CONSTEXPR S_ROOM_START_MATCH::S_ROOM_START_MATCH(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.start_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_ROOM_START_MATCHDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_ROOM_START_MATCHDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_ROOM_START_MATCHDefaultTypeInternal() {}
  union {
    S_ROOM_START_MATCH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_ROOM_START_MATCHDefaultTypeInternal _S_ROOM_START_MATCH_default_instance_;
PROTOBUF_CONSTEXPR C_MATCH_READY_TO_RECEIVE::C_MATCH_READY_TO_RECEIVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.account_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_MATCH_READY_TO_RECEIVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCH_READY_TO_RECEIVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCH_READY_TO_RECEIVEDefaultTypeInternal() {}
  union {
    C_MATCH_READY_TO_RECEIVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCH_READY_TO_RECEIVEDefaultTypeInternal _C_MATCH_READY_TO_RECEIVE_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_ALL_READY_TO_RECIEVE::S_MATCH_ALL_READY_TO_RECIEVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_.your_player_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_ALL_READY_TO_RECIEVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_ALL_READY_TO_RECIEVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_ALL_READY_TO_RECIEVEDefaultTypeInternal() {}
  union {
    S_MATCH_ALL_READY_TO_RECIEVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_ALL_READY_TO_RECIEVEDefaultTypeInternal _S_MATCH_ALL_READY_TO_RECIEVE_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_ITEM_GENERATED::S_MATCH_ITEM_GENERATED(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_ITEM_GENERATEDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_ITEM_GENERATEDDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_ITEM_GENERATEDDefaultTypeInternal() {}
  union {
    S_MATCH_ITEM_GENERATED _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_ITEM_GENERATEDDefaultTypeInternal _S_MATCH_ITEM_GENERATED_default_instance_;
PROTOBUF_CONSTEXPR C_MATCH_READY_TO_START::C_MATCH_READY_TO_START(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_MATCH_READY_TO_STARTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCH_READY_TO_STARTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCH_READY_TO_STARTDefaultTypeInternal() {}
  union {
    C_MATCH_READY_TO_START _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCH_READY_TO_STARTDefaultTypeInternal _C_MATCH_READY_TO_START_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_START::S_MATCH_START(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.end_tick_)*/uint64_t{0u}
  , /*decltype(_impl_.current_tick_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_STARTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_STARTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_STARTDefaultTypeInternal() {}
  union {
    S_MATCH_START _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_STARTDefaultTypeInternal _S_MATCH_START_default_instance_;
PROTOBUF_CONSTEXPR C_MATCH_INFO_MyInfo::C_MATCH_INFO_MyInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.rotation_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_MATCH_INFO_MyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCH_INFO_MyInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCH_INFO_MyInfoDefaultTypeInternal() {}
  union {
    C_MATCH_INFO_MyInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCH_INFO_MyInfoDefaultTypeInternal _C_MATCH_INFO_MyInfo_default_instance_;
PROTOBUF_CONSTEXPR C_MATCH_INFO::C_MATCH_INFO(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_.player_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_MATCH_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCH_INFODefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCH_INFODefaultTypeInternal() {}
  union {
    C_MATCH_INFO _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCH_INFODefaultTypeInternal _C_MATCH_INFO_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_INFO::S_MATCH_INFO(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_.current_tick_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_INFODefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_INFODefaultTypeInternal() {}
  union {
    S_MATCH_INFO _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_INFODefaultTypeInternal _S_MATCH_INFO_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_END::S_MATCH_END(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.chaser_score_)*/0
  , /*decltype(_impl_.fugitivie_first_score_)*/0
  , /*decltype(_impl_.fugitivie_second_score_)*/0
  , /*decltype(_impl_.fugitivie_third_score_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_ENDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_ENDDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_ENDDefaultTypeInternal() {}
  union {
    S_MATCH_END _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_ENDDefaultTypeInternal _S_MATCH_END_default_instance_;
PROTOBUF_CONSTEXPR C_MATCH_ITEM_PICKUP::C_MATCH_ITEM_PICKUP(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_index_)*/0
  , /*decltype(_impl_.item_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_MATCH_ITEM_PICKUPDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCH_ITEM_PICKUPDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCH_ITEM_PICKUPDefaultTypeInternal() {}
  union {
    C_MATCH_ITEM_PICKUP _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCH_ITEM_PICKUPDefaultTypeInternal _C_MATCH_ITEM_PICKUP_default_instance_;
PROTOBUF_CONSTEXPR C_MATCH_ITEM_MOVE::C_MATCH_ITEM_MOVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_index_)*/0
  , /*decltype(_impl_.from_index_)*/0
  , /*decltype(_impl_.to_index_)*/0
  , /*decltype(_impl_.item_index_)*/0
  , /*decltype(_impl_.target_top_left_index_)*/0
  , /*decltype(_impl_.is_item_rotated_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_MATCH_ITEM_MOVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCH_ITEM_MOVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCH_ITEM_MOVEDefaultTypeInternal() {}
  union {
    C_MATCH_ITEM_MOVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCH_ITEM_MOVEDefaultTypeInternal _C_MATCH_ITEM_MOVE_default_instance_;
PROTOBUF_CONSTEXPR C_MATCH_ITEM_DROP::C_MATCH_ITEM_DROP(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.drop_item_position_)*/nullptr
  , /*decltype(_impl_.drop_item_rotation_)*/nullptr
  , /*decltype(_impl_.player_index_)*/0
  , /*decltype(_impl_.item_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_MATCH_ITEM_DROPDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCH_ITEM_DROPDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCH_ITEM_DROPDefaultTypeInternal() {}
  union {
    C_MATCH_ITEM_DROP _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCH_ITEM_DROPDefaultTypeInternal _C_MATCH_ITEM_DROP_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_ITEM_SOMEONE_PICKUP::S_MATCH_ITEM_SOMEONE_PICKUP(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_index_)*/0
  , /*decltype(_impl_.item_index_)*/0
  , /*decltype(_impl_.top_left_index_)*/0
  , /*decltype(_impl_.is_item_rotated_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_ITEM_SOMEONE_PICKUPDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_ITEM_SOMEONE_PICKUPDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_ITEM_SOMEONE_PICKUPDefaultTypeInternal() {}
  union {
    S_MATCH_ITEM_SOMEONE_PICKUP _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_ITEM_SOMEONE_PICKUPDefaultTypeInternal _S_MATCH_ITEM_SOMEONE_PICKUP_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_ITEM_SOMEONE_MOVE::S_MATCH_ITEM_SOMEONE_MOVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_index_)*/0
  , /*decltype(_impl_.from_index_)*/0
  , /*decltype(_impl_.to_index_)*/0
  , /*decltype(_impl_.item_index_)*/0
  , /*decltype(_impl_.top_left_index_)*/0
  , /*decltype(_impl_.is_item_rotated_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_ITEM_SOMEONE_MOVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_ITEM_SOMEONE_MOVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_ITEM_SOMEONE_MOVEDefaultTypeInternal() {}
  union {
    S_MATCH_ITEM_SOMEONE_MOVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_ITEM_SOMEONE_MOVEDefaultTypeInternal _S_MATCH_ITEM_SOMEONE_MOVE_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_ITEM_SOMEONE_DROP::S_MATCH_ITEM_SOMEONE_DROP(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.drop_item_position_)*/nullptr
  , /*decltype(_impl_.drop_item_rotation_)*/nullptr
  , /*decltype(_impl_.player_index_)*/0
  , /*decltype(_impl_.item_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_ITEM_SOMEONE_DROPDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_ITEM_SOMEONE_DROPDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_ITEM_SOMEONE_DROPDefaultTypeInternal() {}
  union {
    S_MATCH_ITEM_SOMEONE_DROP _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_ITEM_SOMEONE_DROPDefaultTypeInternal _S_MATCH_ITEM_SOMEONE_DROP_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_SCALE_ON_CHANGED::S_MATCH_SCALE_ON_CHANGED(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.scale_index_)*/0
  , /*decltype(_impl_.current_weight_)*/0
  , /*decltype(_impl_.is_operating_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_SCALE_ON_CHANGEDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_SCALE_ON_CHANGEDDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_SCALE_ON_CHANGEDDefaultTypeInternal() {}
  union {
    S_MATCH_SCALE_ON_CHANGED _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_SCALE_ON_CHANGEDDefaultTypeInternal _S_MATCH_SCALE_ON_CHANGED_default_instance_;
PROTOBUF_CONSTEXPR C_MATCH_CHASER_ATTACK::C_MATCH_CHASER_ATTACK(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.attack_position_)*/nullptr
  , /*decltype(_impl_.attack_rotation_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_MATCH_CHASER_ATTACKDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCH_CHASER_ATTACKDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCH_CHASER_ATTACKDefaultTypeInternal() {}
  union {
    C_MATCH_CHASER_ATTACK _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCH_CHASER_ATTACKDefaultTypeInternal _C_MATCH_CHASER_ATTACK_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_CHASER_ATTACK::S_MATCH_CHASER_ATTACK(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.attack_position_)*/nullptr
  , /*decltype(_impl_.attack_rotation_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_CHASER_ATTACKDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_CHASER_ATTACKDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_CHASER_ATTACKDefaultTypeInternal() {}
  union {
    S_MATCH_CHASER_ATTACK _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_CHASER_ATTACKDefaultTypeInternal _S_MATCH_CHASER_ATTACK_default_instance_;
PROTOBUF_CONSTEXPR C_MATCH_CHASER_HIT::C_MATCH_CHASER_HIT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.attack_position_)*/nullptr
  , /*decltype(_impl_.attack_rotation_)*/nullptr
  , /*decltype(_impl_.hit_player_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_MATCH_CHASER_HITDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCH_CHASER_HITDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCH_CHASER_HITDefaultTypeInternal() {}
  union {
    C_MATCH_CHASER_HIT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCH_CHASER_HITDefaultTypeInternal _C_MATCH_CHASER_HIT_default_instance_;
PROTOBUF_CONSTEXPR S_MATCH_CHASER_HIT::S_MATCH_CHASER_HIT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/false
  , /*decltype(_impl_.hit_player_index_)*/0
  , /*decltype(_impl_.changed_state_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCH_CHASER_HITDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCH_CHASER_HITDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCH_CHASER_HITDefaultTypeInternal() {}
  union {
    S_MATCH_CHASER_HIT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCH_CHASER_HITDefaultTypeInternal _S_MATCH_CHASER_HIT_default_instance_;
}  // namespace ProjectJ
static ::_pb::Metadata file_level_metadata_Message_2eproto[42];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Message_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Message_2eproto = nullptr;

const uint32_t TableStruct_Message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_VERIFY_TOKEN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_VERIFY_TOKEN, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_VERIFY_TOKEN, _impl_.token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_VERIFY_TOKEN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_VERIFY_TOKEN, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_CHAT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_CHAT, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_CHAT, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_CHAT, _impl_.chat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_CHAT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_CHAT, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_CHAT, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_CHAT, _impl_.chat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_REFRESH_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_REFRESH_ROOM, _impl_.account_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_REFRESH_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_REFRESH_ROOM, _impl_.rooms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_CREATE_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_CREATE_ROOM, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_CREATE_ROOM, _impl_.title_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_CREATE_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_CREATE_ROOM, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_CREATE_ROOM, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_CREATE_ROOM, _impl_.slot_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_ENTER_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_ENTER_ROOM, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_LOBBY_ENTER_ROOM, _impl_.room_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_ENTER_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_ENTER_ROOM, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_ENTER_ROOM, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_LOBBY_ENTER_ROOM, _impl_.slot_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_READY_TO_RECEIVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_READY_TO_RECEIVE, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_READY_TO_RECEIVE, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_READY_TO_RECEIVE, _impl_.slot_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_INFO, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_LEAVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_LEAVE, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_LEAVE, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_LEAVE, _impl_.slot_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_LEAVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_LEAVE, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_OTHER_ENTER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_OTHER_ENTER, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_OTHER_ENTER, _impl_.slot_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_OTHER_ENTER, _impl_.other_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_OTHER_LEAVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_OTHER_LEAVE, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_OTHER_LEAVE, _impl_.slot_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_READY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_READY, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_READY, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_READY, _impl_.slot_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_READY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_READY, _impl_.slot_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_READY, _impl_.is_ready_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_CHAT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_CHAT, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_CHAT, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_CHAT, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_ROOM_CHAT, _impl_.chat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_CHAT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_CHAT, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_CHAT, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_CHAT, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_CHAT, _impl_.chat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_STANDBY_MATCH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_STANDBY_MATCH, _impl_.count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_START_MATCH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_ROOM_START_MATCH, _impl_.start_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_READY_TO_RECEIVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_READY_TO_RECEIVE, _impl_.account_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ALL_READY_TO_RECIEVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ALL_READY_TO_RECIEVE, _impl_.your_player_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ALL_READY_TO_RECIEVE, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_GENERATED, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_GENERATED, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_READY_TO_START, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_READY_TO_START, _impl_.player_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_START, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_START, _impl_.end_tick_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_START, _impl_.current_tick_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_INFO_MyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_INFO_MyInfo, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_INFO_MyInfo, _impl_.rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_INFO, _impl_.player_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_INFO, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_INFO, _impl_.current_tick_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_INFO, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_END, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_END, _impl_.chaser_score_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_END, _impl_.fugitivie_first_score_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_END, _impl_.fugitivie_second_score_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_END, _impl_.fugitivie_third_score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_PICKUP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_PICKUP, _impl_.player_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_PICKUP, _impl_.item_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_MOVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_MOVE, _impl_.player_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_MOVE, _impl_.from_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_MOVE, _impl_.to_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_MOVE, _impl_.item_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_MOVE, _impl_.target_top_left_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_MOVE, _impl_.is_item_rotated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_DROP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_DROP, _impl_.player_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_DROP, _impl_.item_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_DROP, _impl_.drop_item_position_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_ITEM_DROP, _impl_.drop_item_rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_PICKUP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_PICKUP, _impl_.player_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_PICKUP, _impl_.item_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_PICKUP, _impl_.top_left_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_PICKUP, _impl_.is_item_rotated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE, _impl_.player_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE, _impl_.from_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE, _impl_.to_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE, _impl_.item_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE, _impl_.top_left_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE, _impl_.is_item_rotated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_DROP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_DROP, _impl_.player_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_DROP, _impl_.item_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_DROP, _impl_.drop_item_position_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_ITEM_SOMEONE_DROP, _impl_.drop_item_rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_SCALE_ON_CHANGED, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_SCALE_ON_CHANGED, _impl_.scale_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_SCALE_ON_CHANGED, _impl_.current_weight_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_SCALE_ON_CHANGED, _impl_.is_operating_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_CHASER_ATTACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_CHASER_ATTACK, _impl_.attack_position_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_CHASER_ATTACK, _impl_.attack_rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_CHASER_ATTACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_CHASER_ATTACK, _impl_.attack_position_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_CHASER_ATTACK, _impl_.attack_rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_CHASER_HIT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_CHASER_HIT, _impl_.attack_position_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_CHASER_HIT, _impl_.attack_rotation_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::C_MATCH_CHASER_HIT, _impl_.hit_player_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_CHASER_HIT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_CHASER_HIT, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_CHASER_HIT, _impl_.hit_player_index_),
  PROTOBUF_FIELD_OFFSET(::ProjectJ::S_MATCH_CHASER_HIT, _impl_.changed_state_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ProjectJ::C_VERIFY_TOKEN)},
  { 8, -1, -1, sizeof(::ProjectJ::S_VERIFY_TOKEN)},
  { 15, -1, -1, sizeof(::ProjectJ::C_LOBBY_CHAT)},
  { 24, -1, -1, sizeof(::ProjectJ::S_LOBBY_CHAT)},
  { 33, -1, -1, sizeof(::ProjectJ::C_LOBBY_REFRESH_ROOM)},
  { 40, -1, -1, sizeof(::ProjectJ::S_LOBBY_REFRESH_ROOM)},
  { 47, -1, -1, sizeof(::ProjectJ::C_LOBBY_CREATE_ROOM)},
  { 55, -1, -1, sizeof(::ProjectJ::S_LOBBY_CREATE_ROOM)},
  { 64, -1, -1, sizeof(::ProjectJ::C_LOBBY_ENTER_ROOM)},
  { 72, -1, -1, sizeof(::ProjectJ::S_LOBBY_ENTER_ROOM)},
  { 81, -1, -1, sizeof(::ProjectJ::C_ROOM_READY_TO_RECEIVE)},
  { 90, -1, -1, sizeof(::ProjectJ::S_ROOM_INFO)},
  { 97, -1, -1, sizeof(::ProjectJ::C_ROOM_LEAVE)},
  { 106, -1, -1, sizeof(::ProjectJ::S_ROOM_LEAVE)},
  { 113, -1, -1, sizeof(::ProjectJ::S_ROOM_OTHER_ENTER)},
  { 122, -1, -1, sizeof(::ProjectJ::S_ROOM_OTHER_LEAVE)},
  { 130, -1, -1, sizeof(::ProjectJ::C_ROOM_READY)},
  { 139, -1, -1, sizeof(::ProjectJ::S_ROOM_READY)},
  { 147, -1, -1, sizeof(::ProjectJ::C_ROOM_CHAT)},
  { 157, -1, -1, sizeof(::ProjectJ::S_ROOM_CHAT)},
  { 167, -1, -1, sizeof(::ProjectJ::S_ROOM_STANDBY_MATCH)},
  { 174, -1, -1, sizeof(::ProjectJ::S_ROOM_START_MATCH)},
  { 181, -1, -1, sizeof(::ProjectJ::C_MATCH_READY_TO_RECEIVE)},
  { 188, -1, -1, sizeof(::ProjectJ::S_MATCH_ALL_READY_TO_RECIEVE)},
  { 196, -1, -1, sizeof(::ProjectJ::S_MATCH_ITEM_GENERATED)},
  { 203, -1, -1, sizeof(::ProjectJ::C_MATCH_READY_TO_START)},
  { 210, -1, -1, sizeof(::ProjectJ::S_MATCH_START)},
  { 218, -1, -1, sizeof(::ProjectJ::C_MATCH_INFO_MyInfo)},
  { 226, -1, -1, sizeof(::ProjectJ::C_MATCH_INFO)},
  { 234, -1, -1, sizeof(::ProjectJ::S_MATCH_INFO)},
  { 242, -1, -1, sizeof(::ProjectJ::S_MATCH_END)},
  { 252, -1, -1, sizeof(::ProjectJ::C_MATCH_ITEM_PICKUP)},
  { 260, -1, -1, sizeof(::ProjectJ::C_MATCH_ITEM_MOVE)},
  { 272, -1, -1, sizeof(::ProjectJ::C_MATCH_ITEM_DROP)},
  { 282, -1, -1, sizeof(::ProjectJ::S_MATCH_ITEM_SOMEONE_PICKUP)},
  { 292, -1, -1, sizeof(::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE)},
  { 304, -1, -1, sizeof(::ProjectJ::S_MATCH_ITEM_SOMEONE_DROP)},
  { 314, -1, -1, sizeof(::ProjectJ::S_MATCH_SCALE_ON_CHANGED)},
  { 323, -1, -1, sizeof(::ProjectJ::C_MATCH_CHASER_ATTACK)},
  { 331, -1, -1, sizeof(::ProjectJ::S_MATCH_CHASER_ATTACK)},
  { 339, -1, -1, sizeof(::ProjectJ::C_MATCH_CHASER_HIT)},
  { 348, -1, -1, sizeof(::ProjectJ::S_MATCH_CHASER_HIT)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ProjectJ::_C_VERIFY_TOKEN_default_instance_._instance,
  &::ProjectJ::_S_VERIFY_TOKEN_default_instance_._instance,
  &::ProjectJ::_C_LOBBY_CHAT_default_instance_._instance,
  &::ProjectJ::_S_LOBBY_CHAT_default_instance_._instance,
  &::ProjectJ::_C_LOBBY_REFRESH_ROOM_default_instance_._instance,
  &::ProjectJ::_S_LOBBY_REFRESH_ROOM_default_instance_._instance,
  &::ProjectJ::_C_LOBBY_CREATE_ROOM_default_instance_._instance,
  &::ProjectJ::_S_LOBBY_CREATE_ROOM_default_instance_._instance,
  &::ProjectJ::_C_LOBBY_ENTER_ROOM_default_instance_._instance,
  &::ProjectJ::_S_LOBBY_ENTER_ROOM_default_instance_._instance,
  &::ProjectJ::_C_ROOM_READY_TO_RECEIVE_default_instance_._instance,
  &::ProjectJ::_S_ROOM_INFO_default_instance_._instance,
  &::ProjectJ::_C_ROOM_LEAVE_default_instance_._instance,
  &::ProjectJ::_S_ROOM_LEAVE_default_instance_._instance,
  &::ProjectJ::_S_ROOM_OTHER_ENTER_default_instance_._instance,
  &::ProjectJ::_S_ROOM_OTHER_LEAVE_default_instance_._instance,
  &::ProjectJ::_C_ROOM_READY_default_instance_._instance,
  &::ProjectJ::_S_ROOM_READY_default_instance_._instance,
  &::ProjectJ::_C_ROOM_CHAT_default_instance_._instance,
  &::ProjectJ::_S_ROOM_CHAT_default_instance_._instance,
  &::ProjectJ::_S_ROOM_STANDBY_MATCH_default_instance_._instance,
  &::ProjectJ::_S_ROOM_START_MATCH_default_instance_._instance,
  &::ProjectJ::_C_MATCH_READY_TO_RECEIVE_default_instance_._instance,
  &::ProjectJ::_S_MATCH_ALL_READY_TO_RECIEVE_default_instance_._instance,
  &::ProjectJ::_S_MATCH_ITEM_GENERATED_default_instance_._instance,
  &::ProjectJ::_C_MATCH_READY_TO_START_default_instance_._instance,
  &::ProjectJ::_S_MATCH_START_default_instance_._instance,
  &::ProjectJ::_C_MATCH_INFO_MyInfo_default_instance_._instance,
  &::ProjectJ::_C_MATCH_INFO_default_instance_._instance,
  &::ProjectJ::_S_MATCH_INFO_default_instance_._instance,
  &::ProjectJ::_S_MATCH_END_default_instance_._instance,
  &::ProjectJ::_C_MATCH_ITEM_PICKUP_default_instance_._instance,
  &::ProjectJ::_C_MATCH_ITEM_MOVE_default_instance_._instance,
  &::ProjectJ::_C_MATCH_ITEM_DROP_default_instance_._instance,
  &::ProjectJ::_S_MATCH_ITEM_SOMEONE_PICKUP_default_instance_._instance,
  &::ProjectJ::_S_MATCH_ITEM_SOMEONE_MOVE_default_instance_._instance,
  &::ProjectJ::_S_MATCH_ITEM_SOMEONE_DROP_default_instance_._instance,
  &::ProjectJ::_S_MATCH_SCALE_ON_CHANGED_default_instance_._instance,
  &::ProjectJ::_C_MATCH_CHASER_ATTACK_default_instance_._instance,
  &::ProjectJ::_S_MATCH_CHASER_ATTACK_default_instance_._instance,
  &::ProjectJ::_C_MATCH_CHASER_HIT_default_instance_._instance,
  &::ProjectJ::_S_MATCH_CHASER_HIT_default_instance_._instance,
};

const char descriptor_table_protodef_Message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rMessage.proto\022\010ProjectJ\032\nEnum.proto\032\014S"
  "truct.proto\"3\n\016C_VERIFY_TOKEN\022\022\n\naccount"
  "_id\030\001 \001(\005\022\r\n\005token\030\002 \001(\t\" \n\016S_VERIFY_TOK"
  "EN\022\016\n\006result\030\001 \001(\010\"B\n\014C_LOBBY_CHAT\022\022\n\nac"
  "count_id\030\001 \001(\005\022\020\n\010nickname\030\002 \001(\t\022\014\n\004chat"
  "\030\003 \001(\t\"B\n\014S_LOBBY_CHAT\022\022\n\naccount_id\030\001 \001"
  "(\005\022\020\n\010nickname\030\002 \001(\t\022\014\n\004chat\030\003 \001(\t\"*\n\024C_"
  "LOBBY_REFRESH_ROOM\022\022\n\naccount_id\030\001 \001(\005\"5"
  "\n\024S_LOBBY_REFRESH_ROOM\022\035\n\005rooms\030\001 \003(\0132\016."
  "ProjectJ.Room\"8\n\023C_LOBBY_CREATE_ROOM\022\022\n\n"
  "account_id\030\001 \001(\005\022\r\n\005title\030\002 \001(\t\"J\n\023S_LOB"
  "BY_CREATE_ROOM\022\016\n\006result\030\001 \001(\010\022\017\n\007room_i"
  "d\030\002 \001(\005\022\022\n\nslot_index\030\003 \001(\005\"9\n\022C_LOBBY_E"
  "NTER_ROOM\022\022\n\naccount_id\030\001 \001(\005\022\017\n\007room_id"
  "\030\002 \001(\005\"I\n\022S_LOBBY_ENTER_ROOM\022\016\n\006result\030\001"
  " \001(\010\022\017\n\007room_id\030\002 \001(\005\022\022\n\nslot_index\030\003 \001("
  "\005\"R\n\027C_ROOM_READY_TO_RECEIVE\022\022\n\naccount_"
  "id\030\001 \001(\005\022\017\n\007room_id\030\002 \001(\005\022\022\n\nslot_index\030"
  "\003 \001(\005\"/\n\013S_ROOM_INFO\022 \n\004info\030\001 \001(\0132\022.Pro"
  "jectJ.RoomInfo\"G\n\014C_ROOM_LEAVE\022\022\n\naccoun"
  "t_id\030\001 \001(\005\022\017\n\007room_id\030\002 \001(\005\022\022\n\nslot_inde"
  "x\030\003 \001(\005\"\036\n\014S_ROOM_LEAVE\022\016\n\006result\030\001 \001(\010\""
  "Z\n\022S_ROOM_OTHER_ENTER\022\017\n\007room_id\030\001 \001(\005\022\022"
  "\n\nslot_index\030\002 \001(\005\022\037\n\005other\030\003 \001(\0132\020.Proj"
  "ectJ.Player\"9\n\022S_ROOM_OTHER_LEAVE\022\017\n\007roo"
  "m_id\030\001 \001(\005\022\022\n\nslot_index\030\002 \001(\005\"G\n\014C_ROOM"
  "_READY\022\022\n\naccount_id\030\001 \001(\005\022\017\n\007room_id\030\002 "
  "\001(\005\022\022\n\nslot_index\030\003 \001(\005\"4\n\014S_ROOM_READY\022"
  "\022\n\nslot_index\030\001 \001(\005\022\020\n\010is_ready\030\002 \001(\010\"R\n"
  "\013C_ROOM_CHAT\022\022\n\naccount_id\030\001 \001(\005\022\020\n\010nick"
  "name\030\002 \001(\t\022\017\n\007room_id\030\003 \001(\005\022\014\n\004chat\030\004 \001("
  "\t\"R\n\013S_ROOM_CHAT\022\022\n\naccount_id\030\001 \001(\005\022\020\n\010"
  "nickname\030\002 \001(\t\022\017\n\007room_id\030\003 \001(\005\022\014\n\004chat\030"
  "\004 \001(\t\"%\n\024S_ROOM_STANDBY_MATCH\022\r\n\005count\030\001"
  " \001(\r\"#\n\022S_ROOM_START_MATCH\022\r\n\005start\030\001 \001("
  "\010\".\n\030C_MATCH_READY_TO_RECEIVE\022\022\n\naccount"
  "_id\030\001 \001(\005\"`\n\034S_MATCH_ALL_READY_TO_RECIEV"
  "E\022\031\n\021your_player_index\030\001 \001(\005\022%\n\004info\030\002 \001"
  "(\0132\027.ProjectJ.MatchInitInfo\"7\n\026S_MATCH_I"
  "TEM_GENERATED\022\035\n\005items\030\001 \003(\0132\016.ProjectJ."
  "Item\".\n\026C_MATCH_READY_TO_START\022\024\n\014player"
  "_index\030\001 \001(\005\"7\n\rS_MATCH_START\022\020\n\010end_tic"
  "k\030\001 \001(\004\022\024\n\014current_tick\030\002 \001(\004\"\244\001\n\014C_MATC"
  "H_INFO\022\024\n\014player_index\030\001 \001(\005\022+\n\004info\030\002 \001"
  "(\0132\035.ProjectJ.C_MATCH_INFO.MyInfo\032Q\n\006MyI"
  "nfo\022\"\n\010position\030\001 \001(\0132\020.ProjectJ.Vector\022"
  "#\n\010rotation\030\002 \001(\0132\021.ProjectJ.Rotator\"G\n\014"
  "S_MATCH_INFO\022\024\n\014current_tick\030\001 \001(\004\022!\n\004in"
  "fo\030\002 \001(\0132\023.ProjectJ.MatchInfo\"\201\001\n\013S_MATC"
  "H_END\022\024\n\014chaser_score\030\001 \001(\005\022\035\n\025fugitivie"
  "_first_score\030\002 \001(\005\022\036\n\026fugitivie_second_s"
  "core\030\003 \001(\005\022\035\n\025fugitivie_third_score\030\004 \001("
  "\005\"\?\n\023C_MATCH_ITEM_PICKUP\022\024\n\014player_index"
  "\030\001 \001(\005\022\022\n\nitem_index\030\002 \001(\005\"\233\001\n\021C_MATCH_I"
  "TEM_MOVE\022\024\n\014player_index\030\001 \001(\005\022\022\n\nfrom_i"
  "ndex\030\002 \001(\005\022\020\n\010to_index\030\003 \001(\005\022\022\n\nitem_ind"
  "ex\030\004 \001(\005\022\035\n\025target_top_left_index\030\005 \001(\005\022"
  "\027\n\017is_item_rotated\030\006 \001(\010\"\232\001\n\021C_MATCH_ITE"
  "M_DROP\022\024\n\014player_index\030\001 \001(\005\022\022\n\nitem_ind"
  "ex\030\002 \001(\005\022,\n\022drop_item_position\030\003 \001(\0132\020.P"
  "rojectJ.Vector\022-\n\022drop_item_rotation\030\004 \001"
  "(\0132\021.ProjectJ.Rotator\"x\n\033S_MATCH_ITEM_SO"
  "MEONE_PICKUP\022\024\n\014player_index\030\001 \001(\005\022\022\n\nit"
  "em_index\030\002 \001(\005\022\026\n\016top_left_index\030\003 \001(\005\022\027"
  "\n\017is_item_rotated\030\004 \001(\010\"\234\001\n\031S_MATCH_ITEM"
  "_SOMEONE_MOVE\022\024\n\014player_index\030\001 \001(\005\022\022\n\nf"
  "rom_index\030\002 \001(\005\022\020\n\010to_index\030\003 \001(\005\022\022\n\nite"
  "m_index\030\004 \001(\005\022\026\n\016top_left_index\030\005 \001(\005\022\027\n"
  "\017is_item_rotated\030\006 \001(\010\"\242\001\n\031S_MATCH_ITEM_"
  "SOMEONE_DROP\022\024\n\014player_index\030\001 \001(\005\022\022\n\nit"
  "em_index\030\002 \001(\005\022,\n\022drop_item_position\030\003 \001"
  "(\0132\020.ProjectJ.Vector\022-\n\022drop_item_rotati"
  "on\030\004 \001(\0132\021.ProjectJ.Rotator\"]\n\030S_MATCH_S"
  "CALE_ON_CHANGED\022\023\n\013scale_index\030\001 \001(\005\022\026\n\016"
  "current_weight\030\002 \001(\005\022\024\n\014is_operating\030\003 \001"
  "(\010\"n\n\025C_MATCH_CHASER_ATTACK\022)\n\017attack_po"
  "sition\030\001 \001(\0132\020.ProjectJ.Vector\022*\n\017attack"
  "_rotation\030\002 \001(\0132\021.ProjectJ.Rotator\"n\n\025S_"
  "MATCH_CHASER_ATTACK\022)\n\017attack_position\030\001"
  " \001(\0132\020.ProjectJ.Vector\022*\n\017attack_rotatio"
  "n\030\002 \001(\0132\021.ProjectJ.Rotator\"\205\001\n\022C_MATCH_C"
  "HASER_HIT\022)\n\017attack_position\030\001 \001(\0132\020.Pro"
  "jectJ.Vector\022*\n\017attack_rotation\030\002 \001(\0132\021."
  "ProjectJ.Rotator\022\030\n\020hit_player_index\030\003 \001"
  "(\005\"q\n\022S_MATCH_CHASER_HIT\022\016\n\006result\030\001 \001(\010"
  "\022\030\n\020hit_player_index\030\002 \001(\005\0221\n\rchanged_st"
  "ate\030\003 \001(\0162\032.ProjectJ.MatchPlayerStateb\006p"
  "roto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Message_2eproto_deps[2] = {
  &::descriptor_table_Enum_2eproto,
  &::descriptor_table_Struct_2eproto,
};
static ::_pbi::once_flag descriptor_table_Message_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Message_2eproto = {
    false, false, 3485, descriptor_table_protodef_Message_2eproto,
    "Message.proto",
    &descriptor_table_Message_2eproto_once, descriptor_table_Message_2eproto_deps, 2, 42,
    schemas, file_default_instances, TableStruct_Message_2eproto::offsets,
    file_level_metadata_Message_2eproto, file_level_enum_descriptors_Message_2eproto,
    file_level_service_descriptors_Message_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Message_2eproto_getter() {
  return &descriptor_table_Message_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Message_2eproto(&descriptor_table_Message_2eproto);
namespace ProjectJ {

// ===================================================================

class C_VERIFY_TOKEN::_Internal {
 public:
};

C_VERIFY_TOKEN::C_VERIFY_TOKEN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_VERIFY_TOKEN)
}
C_VERIFY_TOKEN::C_VERIFY_TOKEN(const C_VERIFY_TOKEN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_VERIFY_TOKEN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.account_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_VERIFY_TOKEN)
}

inline void C_VERIFY_TOKEN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.account_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C_VERIFY_TOKEN::~C_VERIFY_TOKEN() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_VERIFY_TOKEN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_VERIFY_TOKEN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
}

void C_VERIFY_TOKEN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_VERIFY_TOKEN::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_VERIFY_TOKEN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _impl_.account_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_VERIFY_TOKEN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProjectJ.C_VERIFY_TOKEN.token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_VERIFY_TOKEN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_VERIFY_TOKEN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  // string token = 2;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProjectJ.C_VERIFY_TOKEN.token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_VERIFY_TOKEN)
  return target;
}

size_t C_VERIFY_TOKEN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_VERIFY_TOKEN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 2;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_VERIFY_TOKEN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_VERIFY_TOKEN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_VERIFY_TOKEN::GetClassData() const { return &_class_data_; }


void C_VERIFY_TOKEN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_VERIFY_TOKEN*>(&to_msg);
  auto& from = static_cast<const C_VERIFY_TOKEN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_VERIFY_TOKEN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_VERIFY_TOKEN::CopyFrom(const C_VERIFY_TOKEN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_VERIFY_TOKEN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_VERIFY_TOKEN::IsInitialized() const {
  return true;
}

void C_VERIFY_TOKEN::InternalSwap(C_VERIFY_TOKEN* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_VERIFY_TOKEN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[0]);
}

// ===================================================================

class S_VERIFY_TOKEN::_Internal {
 public:
};

S_VERIFY_TOKEN::S_VERIFY_TOKEN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_VERIFY_TOKEN)
}
S_VERIFY_TOKEN::S_VERIFY_TOKEN(const S_VERIFY_TOKEN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_VERIFY_TOKEN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_VERIFY_TOKEN)
}

inline void S_VERIFY_TOKEN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_VERIFY_TOKEN::~S_VERIFY_TOKEN() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_VERIFY_TOKEN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_VERIFY_TOKEN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_VERIFY_TOKEN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_VERIFY_TOKEN::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_VERIFY_TOKEN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_VERIFY_TOKEN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_VERIFY_TOKEN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_VERIFY_TOKEN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_VERIFY_TOKEN)
  return target;
}

size_t S_VERIFY_TOKEN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_VERIFY_TOKEN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_VERIFY_TOKEN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_VERIFY_TOKEN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_VERIFY_TOKEN::GetClassData() const { return &_class_data_; }


void S_VERIFY_TOKEN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_VERIFY_TOKEN*>(&to_msg);
  auto& from = static_cast<const S_VERIFY_TOKEN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_VERIFY_TOKEN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_VERIFY_TOKEN::CopyFrom(const S_VERIFY_TOKEN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_VERIFY_TOKEN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_VERIFY_TOKEN::IsInitialized() const {
  return true;
}

void S_VERIFY_TOKEN::InternalSwap(S_VERIFY_TOKEN* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_VERIFY_TOKEN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[1]);
}

// ===================================================================

class C_LOBBY_CHAT::_Internal {
 public:
};

C_LOBBY_CHAT::C_LOBBY_CHAT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_LOBBY_CHAT)
}
C_LOBBY_CHAT::C_LOBBY_CHAT(const C_LOBBY_CHAT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_LOBBY_CHAT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.chat_){}
    , decltype(_impl_.account_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.chat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chat_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_chat().empty()) {
    _this->_impl_.chat_.Set(from._internal_chat(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_LOBBY_CHAT)
}

inline void C_LOBBY_CHAT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.chat_){}
    , decltype(_impl_.account_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.chat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chat_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C_LOBBY_CHAT::~C_LOBBY_CHAT() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_LOBBY_CHAT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_LOBBY_CHAT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.chat_.Destroy();
}

void C_LOBBY_CHAT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_LOBBY_CHAT::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_LOBBY_CHAT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.chat_.ClearToEmpty();
  _impl_.account_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_LOBBY_CHAT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProjectJ.C_LOBBY_CHAT.nickname"));
        } else
          goto handle_unusual;
        continue;
      // string chat = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_chat();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProjectJ.C_LOBBY_CHAT.chat"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_LOBBY_CHAT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_LOBBY_CHAT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProjectJ.C_LOBBY_CHAT.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // string chat = 3;
  if (!this->_internal_chat().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chat().data(), static_cast<int>(this->_internal_chat().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProjectJ.C_LOBBY_CHAT.chat");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_chat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_LOBBY_CHAT)
  return target;
}

size_t C_LOBBY_CHAT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_LOBBY_CHAT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string chat = 3;
  if (!this->_internal_chat().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chat());
  }

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_LOBBY_CHAT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_LOBBY_CHAT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_LOBBY_CHAT::GetClassData() const { return &_class_data_; }


void C_LOBBY_CHAT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_LOBBY_CHAT*>(&to_msg);
  auto& from = static_cast<const C_LOBBY_CHAT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_LOBBY_CHAT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_chat().empty()) {
    _this->_internal_set_chat(from._internal_chat());
  }
  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_LOBBY_CHAT::CopyFrom(const C_LOBBY_CHAT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_LOBBY_CHAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_LOBBY_CHAT::IsInitialized() const {
  return true;
}

void C_LOBBY_CHAT::InternalSwap(C_LOBBY_CHAT* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.chat_, lhs_arena,
      &other->_impl_.chat_, rhs_arena
  );
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_LOBBY_CHAT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[2]);
}

// ===================================================================

class S_LOBBY_CHAT::_Internal {
 public:
};

S_LOBBY_CHAT::S_LOBBY_CHAT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_LOBBY_CHAT)
}
S_LOBBY_CHAT::S_LOBBY_CHAT(const S_LOBBY_CHAT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_LOBBY_CHAT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.chat_){}
    , decltype(_impl_.account_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.chat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chat_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_chat().empty()) {
    _this->_impl_.chat_.Set(from._internal_chat(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_LOBBY_CHAT)
}

inline void S_LOBBY_CHAT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.chat_){}
    , decltype(_impl_.account_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.chat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chat_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S_LOBBY_CHAT::~S_LOBBY_CHAT() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_LOBBY_CHAT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_LOBBY_CHAT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.chat_.Destroy();
}

void S_LOBBY_CHAT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_LOBBY_CHAT::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_LOBBY_CHAT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.chat_.ClearToEmpty();
  _impl_.account_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_LOBBY_CHAT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProjectJ.S_LOBBY_CHAT.nickname"));
        } else
          goto handle_unusual;
        continue;
      // string chat = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_chat();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProjectJ.S_LOBBY_CHAT.chat"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_LOBBY_CHAT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_LOBBY_CHAT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProjectJ.S_LOBBY_CHAT.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // string chat = 3;
  if (!this->_internal_chat().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chat().data(), static_cast<int>(this->_internal_chat().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProjectJ.S_LOBBY_CHAT.chat");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_chat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_LOBBY_CHAT)
  return target;
}

size_t S_LOBBY_CHAT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_LOBBY_CHAT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string chat = 3;
  if (!this->_internal_chat().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chat());
  }

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_LOBBY_CHAT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_LOBBY_CHAT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_LOBBY_CHAT::GetClassData() const { return &_class_data_; }


void S_LOBBY_CHAT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_LOBBY_CHAT*>(&to_msg);
  auto& from = static_cast<const S_LOBBY_CHAT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_LOBBY_CHAT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_chat().empty()) {
    _this->_internal_set_chat(from._internal_chat());
  }
  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_LOBBY_CHAT::CopyFrom(const S_LOBBY_CHAT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_LOBBY_CHAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_LOBBY_CHAT::IsInitialized() const {
  return true;
}

void S_LOBBY_CHAT::InternalSwap(S_LOBBY_CHAT* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.chat_, lhs_arena,
      &other->_impl_.chat_, rhs_arena
  );
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_LOBBY_CHAT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[3]);
}

// ===================================================================

class C_LOBBY_REFRESH_ROOM::_Internal {
 public:
};

C_LOBBY_REFRESH_ROOM::C_LOBBY_REFRESH_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_LOBBY_REFRESH_ROOM)
}
C_LOBBY_REFRESH_ROOM::C_LOBBY_REFRESH_ROOM(const C_LOBBY_REFRESH_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_LOBBY_REFRESH_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_LOBBY_REFRESH_ROOM)
}

inline void C_LOBBY_REFRESH_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_LOBBY_REFRESH_ROOM::~C_LOBBY_REFRESH_ROOM() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_LOBBY_REFRESH_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_LOBBY_REFRESH_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_LOBBY_REFRESH_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_LOBBY_REFRESH_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_LOBBY_REFRESH_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_LOBBY_REFRESH_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_LOBBY_REFRESH_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_LOBBY_REFRESH_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_LOBBY_REFRESH_ROOM)
  return target;
}

size_t C_LOBBY_REFRESH_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_LOBBY_REFRESH_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_LOBBY_REFRESH_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_LOBBY_REFRESH_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_LOBBY_REFRESH_ROOM::GetClassData() const { return &_class_data_; }


void C_LOBBY_REFRESH_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_LOBBY_REFRESH_ROOM*>(&to_msg);
  auto& from = static_cast<const C_LOBBY_REFRESH_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_LOBBY_REFRESH_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_LOBBY_REFRESH_ROOM::CopyFrom(const C_LOBBY_REFRESH_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_LOBBY_REFRESH_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_LOBBY_REFRESH_ROOM::IsInitialized() const {
  return true;
}

void C_LOBBY_REFRESH_ROOM::InternalSwap(C_LOBBY_REFRESH_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_LOBBY_REFRESH_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[4]);
}

// ===================================================================

class S_LOBBY_REFRESH_ROOM::_Internal {
 public:
};

void S_LOBBY_REFRESH_ROOM::clear_rooms() {
  _impl_.rooms_.Clear();
}
S_LOBBY_REFRESH_ROOM::S_LOBBY_REFRESH_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_LOBBY_REFRESH_ROOM)
}
S_LOBBY_REFRESH_ROOM::S_LOBBY_REFRESH_ROOM(const S_LOBBY_REFRESH_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_LOBBY_REFRESH_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rooms_){from._impl_.rooms_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_LOBBY_REFRESH_ROOM)
}

inline void S_LOBBY_REFRESH_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rooms_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_LOBBY_REFRESH_ROOM::~S_LOBBY_REFRESH_ROOM() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_LOBBY_REFRESH_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_LOBBY_REFRESH_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rooms_.~RepeatedPtrField();
}

void S_LOBBY_REFRESH_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_LOBBY_REFRESH_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_LOBBY_REFRESH_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rooms_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_LOBBY_REFRESH_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ProjectJ.Room rooms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rooms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_LOBBY_REFRESH_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_LOBBY_REFRESH_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProjectJ.Room rooms = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rooms_size()); i < n; i++) {
    const auto& repfield = this->_internal_rooms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_LOBBY_REFRESH_ROOM)
  return target;
}

size_t S_LOBBY_REFRESH_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_LOBBY_REFRESH_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProjectJ.Room rooms = 1;
  total_size += 1UL * this->_internal_rooms_size();
  for (const auto& msg : this->_impl_.rooms_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_LOBBY_REFRESH_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_LOBBY_REFRESH_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_LOBBY_REFRESH_ROOM::GetClassData() const { return &_class_data_; }


void S_LOBBY_REFRESH_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_LOBBY_REFRESH_ROOM*>(&to_msg);
  auto& from = static_cast<const S_LOBBY_REFRESH_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_LOBBY_REFRESH_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.rooms_.MergeFrom(from._impl_.rooms_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_LOBBY_REFRESH_ROOM::CopyFrom(const S_LOBBY_REFRESH_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_LOBBY_REFRESH_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_LOBBY_REFRESH_ROOM::IsInitialized() const {
  return true;
}

void S_LOBBY_REFRESH_ROOM::InternalSwap(S_LOBBY_REFRESH_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rooms_.InternalSwap(&other->_impl_.rooms_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_LOBBY_REFRESH_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[5]);
}

// ===================================================================

class C_LOBBY_CREATE_ROOM::_Internal {
 public:
};

C_LOBBY_CREATE_ROOM::C_LOBBY_CREATE_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_LOBBY_CREATE_ROOM)
}
C_LOBBY_CREATE_ROOM::C_LOBBY_CREATE_ROOM(const C_LOBBY_CREATE_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_LOBBY_CREATE_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.title_){}
    , decltype(_impl_.account_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_LOBBY_CREATE_ROOM)
}

inline void C_LOBBY_CREATE_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.title_){}
    , decltype(_impl_.account_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C_LOBBY_CREATE_ROOM::~C_LOBBY_CREATE_ROOM() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_LOBBY_CREATE_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_LOBBY_CREATE_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.title_.Destroy();
}

void C_LOBBY_CREATE_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_LOBBY_CREATE_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_LOBBY_CREATE_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.account_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_LOBBY_CREATE_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProjectJ.C_LOBBY_CREATE_ROOM.title"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_LOBBY_CREATE_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_LOBBY_CREATE_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProjectJ.C_LOBBY_CREATE_ROOM.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_LOBBY_CREATE_ROOM)
  return target;
}

size_t C_LOBBY_CREATE_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_LOBBY_CREATE_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_LOBBY_CREATE_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_LOBBY_CREATE_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_LOBBY_CREATE_ROOM::GetClassData() const { return &_class_data_; }


void C_LOBBY_CREATE_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_LOBBY_CREATE_ROOM*>(&to_msg);
  auto& from = static_cast<const C_LOBBY_CREATE_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_LOBBY_CREATE_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_LOBBY_CREATE_ROOM::CopyFrom(const C_LOBBY_CREATE_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_LOBBY_CREATE_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_LOBBY_CREATE_ROOM::IsInitialized() const {
  return true;
}

void C_LOBBY_CREATE_ROOM::InternalSwap(C_LOBBY_CREATE_ROOM* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_LOBBY_CREATE_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[6]);
}

// ===================================================================

class S_LOBBY_CREATE_ROOM::_Internal {
 public:
};

S_LOBBY_CREATE_ROOM::S_LOBBY_CREATE_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_LOBBY_CREATE_ROOM)
}
S_LOBBY_CREATE_ROOM::S_LOBBY_CREATE_ROOM(const S_LOBBY_CREATE_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_LOBBY_CREATE_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.slot_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.slot_index_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.slot_index_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_LOBBY_CREATE_ROOM)
}

inline void S_LOBBY_CREATE_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){false}
    , decltype(_impl_.room_id_){0}
    , decltype(_impl_.slot_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_LOBBY_CREATE_ROOM::~S_LOBBY_CREATE_ROOM() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_LOBBY_CREATE_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_LOBBY_CREATE_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_LOBBY_CREATE_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_LOBBY_CREATE_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_LOBBY_CREATE_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.slot_index_) -
      reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.slot_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_LOBBY_CREATE_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 room_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 slot_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.slot_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_LOBBY_CREATE_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_LOBBY_CREATE_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_room_id(), target);
  }

  // int32 slot_index = 3;
  if (this->_internal_slot_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_slot_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_LOBBY_CREATE_ROOM)
  return target;
}

size_t S_LOBBY_CREATE_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_LOBBY_CREATE_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 + 1;
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  // int32 slot_index = 3;
  if (this->_internal_slot_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_LOBBY_CREATE_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_LOBBY_CREATE_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_LOBBY_CREATE_ROOM::GetClassData() const { return &_class_data_; }


void S_LOBBY_CREATE_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_LOBBY_CREATE_ROOM*>(&to_msg);
  auto& from = static_cast<const S_LOBBY_CREATE_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_LOBBY_CREATE_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  if (from._internal_slot_index() != 0) {
    _this->_internal_set_slot_index(from._internal_slot_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_LOBBY_CREATE_ROOM::CopyFrom(const S_LOBBY_CREATE_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_LOBBY_CREATE_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_LOBBY_CREATE_ROOM::IsInitialized() const {
  return true;
}

void S_LOBBY_CREATE_ROOM::InternalSwap(S_LOBBY_CREATE_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_LOBBY_CREATE_ROOM, _impl_.slot_index_)
      + sizeof(S_LOBBY_CREATE_ROOM::_impl_.slot_index_)
      - PROTOBUF_FIELD_OFFSET(S_LOBBY_CREATE_ROOM, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_LOBBY_CREATE_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[7]);
}

// ===================================================================

class C_LOBBY_ENTER_ROOM::_Internal {
 public:
};

C_LOBBY_ENTER_ROOM::C_LOBBY_ENTER_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_LOBBY_ENTER_ROOM)
}
C_LOBBY_ENTER_ROOM::C_LOBBY_ENTER_ROOM(const C_LOBBY_ENTER_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_LOBBY_ENTER_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){}
    , decltype(_impl_.room_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.room_id_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.room_id_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_LOBBY_ENTER_ROOM)
}

inline void C_LOBBY_ENTER_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){0}
    , decltype(_impl_.room_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_LOBBY_ENTER_ROOM::~C_LOBBY_ENTER_ROOM() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_LOBBY_ENTER_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_LOBBY_ENTER_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_LOBBY_ENTER_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_LOBBY_ENTER_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_LOBBY_ENTER_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.room_id_) -
      reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.room_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_LOBBY_ENTER_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 room_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_LOBBY_ENTER_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_LOBBY_ENTER_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_LOBBY_ENTER_ROOM)
  return target;
}

size_t C_LOBBY_ENTER_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_LOBBY_ENTER_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_LOBBY_ENTER_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_LOBBY_ENTER_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_LOBBY_ENTER_ROOM::GetClassData() const { return &_class_data_; }


void C_LOBBY_ENTER_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_LOBBY_ENTER_ROOM*>(&to_msg);
  auto& from = static_cast<const C_LOBBY_ENTER_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_LOBBY_ENTER_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_LOBBY_ENTER_ROOM::CopyFrom(const C_LOBBY_ENTER_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_LOBBY_ENTER_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_LOBBY_ENTER_ROOM::IsInitialized() const {
  return true;
}

void C_LOBBY_ENTER_ROOM::InternalSwap(C_LOBBY_ENTER_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_LOBBY_ENTER_ROOM, _impl_.room_id_)
      + sizeof(C_LOBBY_ENTER_ROOM::_impl_.room_id_)
      - PROTOBUF_FIELD_OFFSET(C_LOBBY_ENTER_ROOM, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_LOBBY_ENTER_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[8]);
}

// ===================================================================

class S_LOBBY_ENTER_ROOM::_Internal {
 public:
};

S_LOBBY_ENTER_ROOM::S_LOBBY_ENTER_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_LOBBY_ENTER_ROOM)
}
S_LOBBY_ENTER_ROOM::S_LOBBY_ENTER_ROOM(const S_LOBBY_ENTER_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_LOBBY_ENTER_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.slot_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.slot_index_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.slot_index_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_LOBBY_ENTER_ROOM)
}

inline void S_LOBBY_ENTER_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){false}
    , decltype(_impl_.room_id_){0}
    , decltype(_impl_.slot_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_LOBBY_ENTER_ROOM::~S_LOBBY_ENTER_ROOM() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_LOBBY_ENTER_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_LOBBY_ENTER_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_LOBBY_ENTER_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_LOBBY_ENTER_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_LOBBY_ENTER_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.slot_index_) -
      reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.slot_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_LOBBY_ENTER_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 room_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 slot_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.slot_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_LOBBY_ENTER_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_LOBBY_ENTER_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_room_id(), target);
  }

  // int32 slot_index = 3;
  if (this->_internal_slot_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_slot_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_LOBBY_ENTER_ROOM)
  return target;
}

size_t S_LOBBY_ENTER_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_LOBBY_ENTER_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 + 1;
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  // int32 slot_index = 3;
  if (this->_internal_slot_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_LOBBY_ENTER_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_LOBBY_ENTER_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_LOBBY_ENTER_ROOM::GetClassData() const { return &_class_data_; }


void S_LOBBY_ENTER_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_LOBBY_ENTER_ROOM*>(&to_msg);
  auto& from = static_cast<const S_LOBBY_ENTER_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_LOBBY_ENTER_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  if (from._internal_slot_index() != 0) {
    _this->_internal_set_slot_index(from._internal_slot_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_LOBBY_ENTER_ROOM::CopyFrom(const S_LOBBY_ENTER_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_LOBBY_ENTER_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_LOBBY_ENTER_ROOM::IsInitialized() const {
  return true;
}

void S_LOBBY_ENTER_ROOM::InternalSwap(S_LOBBY_ENTER_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_LOBBY_ENTER_ROOM, _impl_.slot_index_)
      + sizeof(S_LOBBY_ENTER_ROOM::_impl_.slot_index_)
      - PROTOBUF_FIELD_OFFSET(S_LOBBY_ENTER_ROOM, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_LOBBY_ENTER_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[9]);
}

// ===================================================================

class C_ROOM_READY_TO_RECEIVE::_Internal {
 public:
};

C_ROOM_READY_TO_RECEIVE::C_ROOM_READY_TO_RECEIVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_ROOM_READY_TO_RECEIVE)
}
C_ROOM_READY_TO_RECEIVE::C_ROOM_READY_TO_RECEIVE(const C_ROOM_READY_TO_RECEIVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_ROOM_READY_TO_RECEIVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.slot_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.slot_index_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.slot_index_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_ROOM_READY_TO_RECEIVE)
}

inline void C_ROOM_READY_TO_RECEIVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){0}
    , decltype(_impl_.room_id_){0}
    , decltype(_impl_.slot_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_ROOM_READY_TO_RECEIVE::~C_ROOM_READY_TO_RECEIVE() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_ROOM_READY_TO_RECEIVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_ROOM_READY_TO_RECEIVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_ROOM_READY_TO_RECEIVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_ROOM_READY_TO_RECEIVE::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_ROOM_READY_TO_RECEIVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.slot_index_) -
      reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.slot_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_ROOM_READY_TO_RECEIVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 room_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 slot_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.slot_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_ROOM_READY_TO_RECEIVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_ROOM_READY_TO_RECEIVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_room_id(), target);
  }

  // int32 slot_index = 3;
  if (this->_internal_slot_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_slot_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_ROOM_READY_TO_RECEIVE)
  return target;
}

size_t C_ROOM_READY_TO_RECEIVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_ROOM_READY_TO_RECEIVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  // int32 slot_index = 3;
  if (this->_internal_slot_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_ROOM_READY_TO_RECEIVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_ROOM_READY_TO_RECEIVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_ROOM_READY_TO_RECEIVE::GetClassData() const { return &_class_data_; }


void C_ROOM_READY_TO_RECEIVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_ROOM_READY_TO_RECEIVE*>(&to_msg);
  auto& from = static_cast<const C_ROOM_READY_TO_RECEIVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_ROOM_READY_TO_RECEIVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  if (from._internal_slot_index() != 0) {
    _this->_internal_set_slot_index(from._internal_slot_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_ROOM_READY_TO_RECEIVE::CopyFrom(const C_ROOM_READY_TO_RECEIVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_ROOM_READY_TO_RECEIVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_ROOM_READY_TO_RECEIVE::IsInitialized() const {
  return true;
}

void C_ROOM_READY_TO_RECEIVE::InternalSwap(C_ROOM_READY_TO_RECEIVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_ROOM_READY_TO_RECEIVE, _impl_.slot_index_)
      + sizeof(C_ROOM_READY_TO_RECEIVE::_impl_.slot_index_)
      - PROTOBUF_FIELD_OFFSET(C_ROOM_READY_TO_RECEIVE, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_ROOM_READY_TO_RECEIVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[10]);
}

// ===================================================================

class S_ROOM_INFO::_Internal {
 public:
  static const ::ProjectJ::RoomInfo& info(const S_ROOM_INFO* msg);
};

const ::ProjectJ::RoomInfo&
S_ROOM_INFO::_Internal::info(const S_ROOM_INFO* msg) {
  return *msg->_impl_.info_;
}
void S_ROOM_INFO::clear_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
}
S_ROOM_INFO::S_ROOM_INFO(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_ROOM_INFO)
}
S_ROOM_INFO::S_ROOM_INFO(const S_ROOM_INFO& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ROOM_INFO* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::ProjectJ::RoomInfo(*from._impl_.info_);
  }
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_ROOM_INFO)
}

inline void S_ROOM_INFO::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_ROOM_INFO::~S_ROOM_INFO() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_ROOM_INFO)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ROOM_INFO::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void S_ROOM_INFO::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ROOM_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_ROOM_INFO)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ROOM_INFO::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ProjectJ.RoomInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ROOM_INFO::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_ROOM_INFO)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProjectJ.RoomInfo info = 1;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_ROOM_INFO)
  return target;
}

size_t S_ROOM_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_ROOM_INFO)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.RoomInfo info = 1;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ROOM_INFO::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ROOM_INFO::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ROOM_INFO::GetClassData() const { return &_class_data_; }


void S_ROOM_INFO::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ROOM_INFO*>(&to_msg);
  auto& from = static_cast<const S_ROOM_INFO&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_ROOM_INFO)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::ProjectJ::RoomInfo::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ROOM_INFO::CopyFrom(const S_ROOM_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_ROOM_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ROOM_INFO::IsInitialized() const {
  return true;
}

void S_ROOM_INFO::InternalSwap(S_ROOM_INFO* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.info_, other->_impl_.info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ROOM_INFO::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[11]);
}

// ===================================================================

class C_ROOM_LEAVE::_Internal {
 public:
};

C_ROOM_LEAVE::C_ROOM_LEAVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_ROOM_LEAVE)
}
C_ROOM_LEAVE::C_ROOM_LEAVE(const C_ROOM_LEAVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_ROOM_LEAVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.slot_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.slot_index_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.slot_index_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_ROOM_LEAVE)
}

inline void C_ROOM_LEAVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){0}
    , decltype(_impl_.room_id_){0}
    , decltype(_impl_.slot_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_ROOM_LEAVE::~C_ROOM_LEAVE() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_ROOM_LEAVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_ROOM_LEAVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_ROOM_LEAVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_ROOM_LEAVE::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_ROOM_LEAVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.slot_index_) -
      reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.slot_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_ROOM_LEAVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 room_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 slot_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.slot_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_ROOM_LEAVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_ROOM_LEAVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_room_id(), target);
  }

  // int32 slot_index = 3;
  if (this->_internal_slot_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_slot_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_ROOM_LEAVE)
  return target;
}

size_t C_ROOM_LEAVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_ROOM_LEAVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  // int32 slot_index = 3;
  if (this->_internal_slot_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_ROOM_LEAVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_ROOM_LEAVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_ROOM_LEAVE::GetClassData() const { return &_class_data_; }


void C_ROOM_LEAVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_ROOM_LEAVE*>(&to_msg);
  auto& from = static_cast<const C_ROOM_LEAVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_ROOM_LEAVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  if (from._internal_slot_index() != 0) {
    _this->_internal_set_slot_index(from._internal_slot_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_ROOM_LEAVE::CopyFrom(const C_ROOM_LEAVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_ROOM_LEAVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_ROOM_LEAVE::IsInitialized() const {
  return true;
}

void C_ROOM_LEAVE::InternalSwap(C_ROOM_LEAVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_ROOM_LEAVE, _impl_.slot_index_)
      + sizeof(C_ROOM_LEAVE::_impl_.slot_index_)
      - PROTOBUF_FIELD_OFFSET(C_ROOM_LEAVE, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_ROOM_LEAVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[12]);
}

// ===================================================================

class S_ROOM_LEAVE::_Internal {
 public:
};

S_ROOM_LEAVE::S_ROOM_LEAVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_ROOM_LEAVE)
}
S_ROOM_LEAVE::S_ROOM_LEAVE(const S_ROOM_LEAVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ROOM_LEAVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_ROOM_LEAVE)
}

inline void S_ROOM_LEAVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_ROOM_LEAVE::~S_ROOM_LEAVE() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_ROOM_LEAVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ROOM_LEAVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_ROOM_LEAVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ROOM_LEAVE::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_ROOM_LEAVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ROOM_LEAVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ROOM_LEAVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_ROOM_LEAVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_ROOM_LEAVE)
  return target;
}

size_t S_ROOM_LEAVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_ROOM_LEAVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ROOM_LEAVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ROOM_LEAVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ROOM_LEAVE::GetClassData() const { return &_class_data_; }


void S_ROOM_LEAVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ROOM_LEAVE*>(&to_msg);
  auto& from = static_cast<const S_ROOM_LEAVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_ROOM_LEAVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ROOM_LEAVE::CopyFrom(const S_ROOM_LEAVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_ROOM_LEAVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ROOM_LEAVE::IsInitialized() const {
  return true;
}

void S_ROOM_LEAVE::InternalSwap(S_ROOM_LEAVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ROOM_LEAVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[13]);
}

// ===================================================================

class S_ROOM_OTHER_ENTER::_Internal {
 public:
  static const ::ProjectJ::Player& other(const S_ROOM_OTHER_ENTER* msg);
};

const ::ProjectJ::Player&
S_ROOM_OTHER_ENTER::_Internal::other(const S_ROOM_OTHER_ENTER* msg) {
  return *msg->_impl_.other_;
}
void S_ROOM_OTHER_ENTER::clear_other() {
  if (GetArenaForAllocation() == nullptr && _impl_.other_ != nullptr) {
    delete _impl_.other_;
  }
  _impl_.other_ = nullptr;
}
S_ROOM_OTHER_ENTER::S_ROOM_OTHER_ENTER(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_ROOM_OTHER_ENTER)
}
S_ROOM_OTHER_ENTER::S_ROOM_OTHER_ENTER(const S_ROOM_OTHER_ENTER& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ROOM_OTHER_ENTER* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.other_){nullptr}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.slot_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_other()) {
    _this->_impl_.other_ = new ::ProjectJ::Player(*from._impl_.other_);
  }
  ::memcpy(&_impl_.room_id_, &from._impl_.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.slot_index_) -
    reinterpret_cast<char*>(&_impl_.room_id_)) + sizeof(_impl_.slot_index_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_ROOM_OTHER_ENTER)
}

inline void S_ROOM_OTHER_ENTER::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.other_){nullptr}
    , decltype(_impl_.room_id_){0}
    , decltype(_impl_.slot_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_ROOM_OTHER_ENTER::~S_ROOM_OTHER_ENTER() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_ROOM_OTHER_ENTER)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ROOM_OTHER_ENTER::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.other_;
}

void S_ROOM_OTHER_ENTER::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ROOM_OTHER_ENTER::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_ROOM_OTHER_ENTER)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.other_ != nullptr) {
    delete _impl_.other_;
  }
  _impl_.other_ = nullptr;
  ::memset(&_impl_.room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.slot_index_) -
      reinterpret_cast<char*>(&_impl_.room_id_)) + sizeof(_impl_.slot_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ROOM_OTHER_ENTER::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 room_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 slot_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.slot_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.Player other = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_other(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ROOM_OTHER_ENTER::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_ROOM_OTHER_ENTER)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_room_id(), target);
  }

  // int32 slot_index = 2;
  if (this->_internal_slot_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_slot_index(), target);
  }

  // .ProjectJ.Player other = 3;
  if (this->_internal_has_other()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::other(this),
        _Internal::other(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_ROOM_OTHER_ENTER)
  return target;
}

size_t S_ROOM_OTHER_ENTER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_ROOM_OTHER_ENTER)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.Player other = 3;
  if (this->_internal_has_other()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.other_);
  }

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  // int32 slot_index = 2;
  if (this->_internal_slot_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ROOM_OTHER_ENTER::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ROOM_OTHER_ENTER::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ROOM_OTHER_ENTER::GetClassData() const { return &_class_data_; }


void S_ROOM_OTHER_ENTER::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ROOM_OTHER_ENTER*>(&to_msg);
  auto& from = static_cast<const S_ROOM_OTHER_ENTER&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_ROOM_OTHER_ENTER)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_other()) {
    _this->_internal_mutable_other()->::ProjectJ::Player::MergeFrom(
        from._internal_other());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  if (from._internal_slot_index() != 0) {
    _this->_internal_set_slot_index(from._internal_slot_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ROOM_OTHER_ENTER::CopyFrom(const S_ROOM_OTHER_ENTER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_ROOM_OTHER_ENTER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ROOM_OTHER_ENTER::IsInitialized() const {
  return true;
}

void S_ROOM_OTHER_ENTER::InternalSwap(S_ROOM_OTHER_ENTER* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_ROOM_OTHER_ENTER, _impl_.slot_index_)
      + sizeof(S_ROOM_OTHER_ENTER::_impl_.slot_index_)
      - PROTOBUF_FIELD_OFFSET(S_ROOM_OTHER_ENTER, _impl_.other_)>(
          reinterpret_cast<char*>(&_impl_.other_),
          reinterpret_cast<char*>(&other->_impl_.other_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ROOM_OTHER_ENTER::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[14]);
}

// ===================================================================

class S_ROOM_OTHER_LEAVE::_Internal {
 public:
};

S_ROOM_OTHER_LEAVE::S_ROOM_OTHER_LEAVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_ROOM_OTHER_LEAVE)
}
S_ROOM_OTHER_LEAVE::S_ROOM_OTHER_LEAVE(const S_ROOM_OTHER_LEAVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ROOM_OTHER_LEAVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.room_id_){}
    , decltype(_impl_.slot_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.room_id_, &from._impl_.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.slot_index_) -
    reinterpret_cast<char*>(&_impl_.room_id_)) + sizeof(_impl_.slot_index_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_ROOM_OTHER_LEAVE)
}

inline void S_ROOM_OTHER_LEAVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.room_id_){0}
    , decltype(_impl_.slot_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_ROOM_OTHER_LEAVE::~S_ROOM_OTHER_LEAVE() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_ROOM_OTHER_LEAVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ROOM_OTHER_LEAVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_ROOM_OTHER_LEAVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ROOM_OTHER_LEAVE::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_ROOM_OTHER_LEAVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.slot_index_) -
      reinterpret_cast<char*>(&_impl_.room_id_)) + sizeof(_impl_.slot_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ROOM_OTHER_LEAVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 room_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 slot_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.slot_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ROOM_OTHER_LEAVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_ROOM_OTHER_LEAVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_room_id(), target);
  }

  // int32 slot_index = 2;
  if (this->_internal_slot_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_slot_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_ROOM_OTHER_LEAVE)
  return target;
}

size_t S_ROOM_OTHER_LEAVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_ROOM_OTHER_LEAVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  // int32 slot_index = 2;
  if (this->_internal_slot_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ROOM_OTHER_LEAVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ROOM_OTHER_LEAVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ROOM_OTHER_LEAVE::GetClassData() const { return &_class_data_; }


void S_ROOM_OTHER_LEAVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ROOM_OTHER_LEAVE*>(&to_msg);
  auto& from = static_cast<const S_ROOM_OTHER_LEAVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_ROOM_OTHER_LEAVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  if (from._internal_slot_index() != 0) {
    _this->_internal_set_slot_index(from._internal_slot_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ROOM_OTHER_LEAVE::CopyFrom(const S_ROOM_OTHER_LEAVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_ROOM_OTHER_LEAVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ROOM_OTHER_LEAVE::IsInitialized() const {
  return true;
}

void S_ROOM_OTHER_LEAVE::InternalSwap(S_ROOM_OTHER_LEAVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_ROOM_OTHER_LEAVE, _impl_.slot_index_)
      + sizeof(S_ROOM_OTHER_LEAVE::_impl_.slot_index_)
      - PROTOBUF_FIELD_OFFSET(S_ROOM_OTHER_LEAVE, _impl_.room_id_)>(
          reinterpret_cast<char*>(&_impl_.room_id_),
          reinterpret_cast<char*>(&other->_impl_.room_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ROOM_OTHER_LEAVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[15]);
}

// ===================================================================

class C_ROOM_READY::_Internal {
 public:
};

C_ROOM_READY::C_ROOM_READY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_ROOM_READY)
}
C_ROOM_READY::C_ROOM_READY(const C_ROOM_READY& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_ROOM_READY* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.slot_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.slot_index_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.slot_index_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_ROOM_READY)
}

inline void C_ROOM_READY::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){0}
    , decltype(_impl_.room_id_){0}
    , decltype(_impl_.slot_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_ROOM_READY::~C_ROOM_READY() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_ROOM_READY)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_ROOM_READY::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_ROOM_READY::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_ROOM_READY::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_ROOM_READY)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.slot_index_) -
      reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.slot_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_ROOM_READY::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 room_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 slot_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.slot_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_ROOM_READY::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_ROOM_READY)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_room_id(), target);
  }

  // int32 slot_index = 3;
  if (this->_internal_slot_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_slot_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_ROOM_READY)
  return target;
}

size_t C_ROOM_READY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_ROOM_READY)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  // int32 slot_index = 3;
  if (this->_internal_slot_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_ROOM_READY::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_ROOM_READY::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_ROOM_READY::GetClassData() const { return &_class_data_; }


void C_ROOM_READY::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_ROOM_READY*>(&to_msg);
  auto& from = static_cast<const C_ROOM_READY&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_ROOM_READY)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  if (from._internal_slot_index() != 0) {
    _this->_internal_set_slot_index(from._internal_slot_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_ROOM_READY::CopyFrom(const C_ROOM_READY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_ROOM_READY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_ROOM_READY::IsInitialized() const {
  return true;
}

void C_ROOM_READY::InternalSwap(C_ROOM_READY* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_ROOM_READY, _impl_.slot_index_)
      + sizeof(C_ROOM_READY::_impl_.slot_index_)
      - PROTOBUF_FIELD_OFFSET(C_ROOM_READY, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_ROOM_READY::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[16]);
}

// ===================================================================

class S_ROOM_READY::_Internal {
 public:
};

S_ROOM_READY::S_ROOM_READY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_ROOM_READY)
}
S_ROOM_READY::S_ROOM_READY(const S_ROOM_READY& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ROOM_READY* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.slot_index_){}
    , decltype(_impl_.is_ready_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.slot_index_, &from._impl_.slot_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_ready_) -
    reinterpret_cast<char*>(&_impl_.slot_index_)) + sizeof(_impl_.is_ready_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_ROOM_READY)
}

inline void S_ROOM_READY::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.slot_index_){0}
    , decltype(_impl_.is_ready_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_ROOM_READY::~S_ROOM_READY() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_ROOM_READY)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ROOM_READY::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_ROOM_READY::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ROOM_READY::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_ROOM_READY)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.slot_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_ready_) -
      reinterpret_cast<char*>(&_impl_.slot_index_)) + sizeof(_impl_.is_ready_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ROOM_READY::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 slot_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.slot_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_ready = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.is_ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ROOM_READY::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_ROOM_READY)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 slot_index = 1;
  if (this->_internal_slot_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_slot_index(), target);
  }

  // bool is_ready = 2;
  if (this->_internal_is_ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_ready(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_ROOM_READY)
  return target;
}

size_t S_ROOM_READY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_ROOM_READY)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 slot_index = 1;
  if (this->_internal_slot_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_index());
  }

  // bool is_ready = 2;
  if (this->_internal_is_ready() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ROOM_READY::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ROOM_READY::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ROOM_READY::GetClassData() const { return &_class_data_; }


void S_ROOM_READY::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ROOM_READY*>(&to_msg);
  auto& from = static_cast<const S_ROOM_READY&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_ROOM_READY)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_slot_index() != 0) {
    _this->_internal_set_slot_index(from._internal_slot_index());
  }
  if (from._internal_is_ready() != 0) {
    _this->_internal_set_is_ready(from._internal_is_ready());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ROOM_READY::CopyFrom(const S_ROOM_READY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_ROOM_READY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ROOM_READY::IsInitialized() const {
  return true;
}

void S_ROOM_READY::InternalSwap(S_ROOM_READY* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_ROOM_READY, _impl_.is_ready_)
      + sizeof(S_ROOM_READY::_impl_.is_ready_)
      - PROTOBUF_FIELD_OFFSET(S_ROOM_READY, _impl_.slot_index_)>(
          reinterpret_cast<char*>(&_impl_.slot_index_),
          reinterpret_cast<char*>(&other->_impl_.slot_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ROOM_READY::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[17]);
}

// ===================================================================

class C_ROOM_CHAT::_Internal {
 public:
};

C_ROOM_CHAT::C_ROOM_CHAT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_ROOM_CHAT)
}
C_ROOM_CHAT::C_ROOM_CHAT(const C_ROOM_CHAT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_ROOM_CHAT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.chat_){}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.room_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.chat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chat_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_chat().empty()) {
    _this->_impl_.chat_.Set(from._internal_chat(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.room_id_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.room_id_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_ROOM_CHAT)
}

inline void C_ROOM_CHAT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.chat_){}
    , decltype(_impl_.account_id_){0}
    , decltype(_impl_.room_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.chat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chat_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C_ROOM_CHAT::~C_ROOM_CHAT() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_ROOM_CHAT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_ROOM_CHAT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.chat_.Destroy();
}

void C_ROOM_CHAT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_ROOM_CHAT::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_ROOM_CHAT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.chat_.ClearToEmpty();
  ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.room_id_) -
      reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.room_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_ROOM_CHAT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProjectJ.C_ROOM_CHAT.nickname"));
        } else
          goto handle_unusual;
        continue;
      // int32 room_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string chat = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_chat();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProjectJ.C_ROOM_CHAT.chat"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_ROOM_CHAT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_ROOM_CHAT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProjectJ.C_ROOM_CHAT.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // int32 room_id = 3;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_room_id(), target);
  }

  // string chat = 4;
  if (!this->_internal_chat().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chat().data(), static_cast<int>(this->_internal_chat().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProjectJ.C_ROOM_CHAT.chat");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_chat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_ROOM_CHAT)
  return target;
}

size_t C_ROOM_CHAT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_ROOM_CHAT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string chat = 4;
  if (!this->_internal_chat().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chat());
  }

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  // int32 room_id = 3;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_ROOM_CHAT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_ROOM_CHAT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_ROOM_CHAT::GetClassData() const { return &_class_data_; }


void C_ROOM_CHAT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_ROOM_CHAT*>(&to_msg);
  auto& from = static_cast<const C_ROOM_CHAT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_ROOM_CHAT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_chat().empty()) {
    _this->_internal_set_chat(from._internal_chat());
  }
  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_ROOM_CHAT::CopyFrom(const C_ROOM_CHAT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_ROOM_CHAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_ROOM_CHAT::IsInitialized() const {
  return true;
}

void C_ROOM_CHAT::InternalSwap(C_ROOM_CHAT* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.chat_, lhs_arena,
      &other->_impl_.chat_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_ROOM_CHAT, _impl_.room_id_)
      + sizeof(C_ROOM_CHAT::_impl_.room_id_)
      - PROTOBUF_FIELD_OFFSET(C_ROOM_CHAT, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_ROOM_CHAT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[18]);
}

// ===================================================================

class S_ROOM_CHAT::_Internal {
 public:
};

S_ROOM_CHAT::S_ROOM_CHAT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_ROOM_CHAT)
}
S_ROOM_CHAT::S_ROOM_CHAT(const S_ROOM_CHAT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ROOM_CHAT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.chat_){}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.room_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.chat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chat_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_chat().empty()) {
    _this->_impl_.chat_.Set(from._internal_chat(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.room_id_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.room_id_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_ROOM_CHAT)
}

inline void S_ROOM_CHAT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.chat_){}
    , decltype(_impl_.account_id_){0}
    , decltype(_impl_.room_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.chat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chat_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S_ROOM_CHAT::~S_ROOM_CHAT() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_ROOM_CHAT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ROOM_CHAT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.chat_.Destroy();
}

void S_ROOM_CHAT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ROOM_CHAT::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_ROOM_CHAT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.chat_.ClearToEmpty();
  ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.room_id_) -
      reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.room_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ROOM_CHAT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProjectJ.S_ROOM_CHAT.nickname"));
        } else
          goto handle_unusual;
        continue;
      // int32 room_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string chat = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_chat();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProjectJ.S_ROOM_CHAT.chat"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ROOM_CHAT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_ROOM_CHAT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProjectJ.S_ROOM_CHAT.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // int32 room_id = 3;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_room_id(), target);
  }

  // string chat = 4;
  if (!this->_internal_chat().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chat().data(), static_cast<int>(this->_internal_chat().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProjectJ.S_ROOM_CHAT.chat");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_chat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_ROOM_CHAT)
  return target;
}

size_t S_ROOM_CHAT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_ROOM_CHAT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string chat = 4;
  if (!this->_internal_chat().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chat());
  }

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  // int32 room_id = 3;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ROOM_CHAT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ROOM_CHAT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ROOM_CHAT::GetClassData() const { return &_class_data_; }


void S_ROOM_CHAT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ROOM_CHAT*>(&to_msg);
  auto& from = static_cast<const S_ROOM_CHAT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_ROOM_CHAT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_chat().empty()) {
    _this->_internal_set_chat(from._internal_chat());
  }
  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ROOM_CHAT::CopyFrom(const S_ROOM_CHAT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_ROOM_CHAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ROOM_CHAT::IsInitialized() const {
  return true;
}

void S_ROOM_CHAT::InternalSwap(S_ROOM_CHAT* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.chat_, lhs_arena,
      &other->_impl_.chat_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_ROOM_CHAT, _impl_.room_id_)
      + sizeof(S_ROOM_CHAT::_impl_.room_id_)
      - PROTOBUF_FIELD_OFFSET(S_ROOM_CHAT, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ROOM_CHAT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[19]);
}

// ===================================================================

class S_ROOM_STANDBY_MATCH::_Internal {
 public:
};

S_ROOM_STANDBY_MATCH::S_ROOM_STANDBY_MATCH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_ROOM_STANDBY_MATCH)
}
S_ROOM_STANDBY_MATCH::S_ROOM_STANDBY_MATCH(const S_ROOM_STANDBY_MATCH& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ROOM_STANDBY_MATCH* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.count_ = from._impl_.count_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_ROOM_STANDBY_MATCH)
}

inline void S_ROOM_STANDBY_MATCH::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.count_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_ROOM_STANDBY_MATCH::~S_ROOM_STANDBY_MATCH() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_ROOM_STANDBY_MATCH)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ROOM_STANDBY_MATCH::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_ROOM_STANDBY_MATCH::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ROOM_STANDBY_MATCH::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_ROOM_STANDBY_MATCH)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.count_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ROOM_STANDBY_MATCH::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ROOM_STANDBY_MATCH::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_ROOM_STANDBY_MATCH)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_ROOM_STANDBY_MATCH)
  return target;
}

size_t S_ROOM_STANDBY_MATCH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_ROOM_STANDBY_MATCH)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ROOM_STANDBY_MATCH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ROOM_STANDBY_MATCH::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ROOM_STANDBY_MATCH::GetClassData() const { return &_class_data_; }


void S_ROOM_STANDBY_MATCH::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ROOM_STANDBY_MATCH*>(&to_msg);
  auto& from = static_cast<const S_ROOM_STANDBY_MATCH&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_ROOM_STANDBY_MATCH)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ROOM_STANDBY_MATCH::CopyFrom(const S_ROOM_STANDBY_MATCH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_ROOM_STANDBY_MATCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ROOM_STANDBY_MATCH::IsInitialized() const {
  return true;
}

void S_ROOM_STANDBY_MATCH::InternalSwap(S_ROOM_STANDBY_MATCH* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.count_, other->_impl_.count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ROOM_STANDBY_MATCH::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[20]);
}

// ===================================================================

class S_ROOM_START_MATCH::_Internal {
 public:
};

S_ROOM_START_MATCH::S_ROOM_START_MATCH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_ROOM_START_MATCH)
}
S_ROOM_START_MATCH::S_ROOM_START_MATCH(const S_ROOM_START_MATCH& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_ROOM_START_MATCH* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.start_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.start_ = from._impl_.start_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_ROOM_START_MATCH)
}

inline void S_ROOM_START_MATCH::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.start_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_ROOM_START_MATCH::~S_ROOM_START_MATCH() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_ROOM_START_MATCH)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_ROOM_START_MATCH::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_ROOM_START_MATCH::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_ROOM_START_MATCH::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_ROOM_START_MATCH)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.start_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ROOM_START_MATCH::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool start = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_ROOM_START_MATCH::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_ROOM_START_MATCH)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool start = 1;
  if (this->_internal_start() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_start(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_ROOM_START_MATCH)
  return target;
}

size_t S_ROOM_START_MATCH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_ROOM_START_MATCH)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool start = 1;
  if (this->_internal_start() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_ROOM_START_MATCH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_ROOM_START_MATCH::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_ROOM_START_MATCH::GetClassData() const { return &_class_data_; }


void S_ROOM_START_MATCH::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_ROOM_START_MATCH*>(&to_msg);
  auto& from = static_cast<const S_ROOM_START_MATCH&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_ROOM_START_MATCH)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start() != 0) {
    _this->_internal_set_start(from._internal_start());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_ROOM_START_MATCH::CopyFrom(const S_ROOM_START_MATCH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_ROOM_START_MATCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ROOM_START_MATCH::IsInitialized() const {
  return true;
}

void S_ROOM_START_MATCH::InternalSwap(S_ROOM_START_MATCH* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.start_, other->_impl_.start_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ROOM_START_MATCH::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[21]);
}

// ===================================================================

class C_MATCH_READY_TO_RECEIVE::_Internal {
 public:
};

C_MATCH_READY_TO_RECEIVE::C_MATCH_READY_TO_RECEIVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_MATCH_READY_TO_RECEIVE)
}
C_MATCH_READY_TO_RECEIVE::C_MATCH_READY_TO_RECEIVE(const C_MATCH_READY_TO_RECEIVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_MATCH_READY_TO_RECEIVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_MATCH_READY_TO_RECEIVE)
}

inline void C_MATCH_READY_TO_RECEIVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.account_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_MATCH_READY_TO_RECEIVE::~C_MATCH_READY_TO_RECEIVE() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_MATCH_READY_TO_RECEIVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_MATCH_READY_TO_RECEIVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_MATCH_READY_TO_RECEIVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_MATCH_READY_TO_RECEIVE::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_MATCH_READY_TO_RECEIVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_MATCH_READY_TO_RECEIVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_MATCH_READY_TO_RECEIVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_MATCH_READY_TO_RECEIVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_MATCH_READY_TO_RECEIVE)
  return target;
}

size_t C_MATCH_READY_TO_RECEIVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_MATCH_READY_TO_RECEIVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->_internal_account_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCH_READY_TO_RECEIVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_MATCH_READY_TO_RECEIVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCH_READY_TO_RECEIVE::GetClassData() const { return &_class_data_; }


void C_MATCH_READY_TO_RECEIVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_MATCH_READY_TO_RECEIVE*>(&to_msg);
  auto& from = static_cast<const C_MATCH_READY_TO_RECEIVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_MATCH_READY_TO_RECEIVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_account_id() != 0) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_MATCH_READY_TO_RECEIVE::CopyFrom(const C_MATCH_READY_TO_RECEIVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_MATCH_READY_TO_RECEIVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_MATCH_READY_TO_RECEIVE::IsInitialized() const {
  return true;
}

void C_MATCH_READY_TO_RECEIVE::InternalSwap(C_MATCH_READY_TO_RECEIVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_MATCH_READY_TO_RECEIVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[22]);
}

// ===================================================================

class S_MATCH_ALL_READY_TO_RECIEVE::_Internal {
 public:
  static const ::ProjectJ::MatchInitInfo& info(const S_MATCH_ALL_READY_TO_RECIEVE* msg);
};

const ::ProjectJ::MatchInitInfo&
S_MATCH_ALL_READY_TO_RECIEVE::_Internal::info(const S_MATCH_ALL_READY_TO_RECIEVE* msg) {
  return *msg->_impl_.info_;
}
void S_MATCH_ALL_READY_TO_RECIEVE::clear_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
}
S_MATCH_ALL_READY_TO_RECIEVE::S_MATCH_ALL_READY_TO_RECIEVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_ALL_READY_TO_RECIEVE)
}
S_MATCH_ALL_READY_TO_RECIEVE::S_MATCH_ALL_READY_TO_RECIEVE(const S_MATCH_ALL_READY_TO_RECIEVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_ALL_READY_TO_RECIEVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.your_player_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::ProjectJ::MatchInitInfo(*from._impl_.info_);
  }
  _this->_impl_.your_player_index_ = from._impl_.your_player_index_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_ALL_READY_TO_RECIEVE)
}

inline void S_MATCH_ALL_READY_TO_RECIEVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.your_player_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_ALL_READY_TO_RECIEVE::~S_MATCH_ALL_READY_TO_RECIEVE() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_ALL_READY_TO_RECIEVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_ALL_READY_TO_RECIEVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void S_MATCH_ALL_READY_TO_RECIEVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_ALL_READY_TO_RECIEVE::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_ALL_READY_TO_RECIEVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _impl_.your_player_index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_ALL_READY_TO_RECIEVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 your_player_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.your_player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.MatchInitInfo info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_ALL_READY_TO_RECIEVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_ALL_READY_TO_RECIEVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 your_player_index = 1;
  if (this->_internal_your_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_your_player_index(), target);
  }

  // .ProjectJ.MatchInitInfo info = 2;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_ALL_READY_TO_RECIEVE)
  return target;
}

size_t S_MATCH_ALL_READY_TO_RECIEVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_ALL_READY_TO_RECIEVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.MatchInitInfo info = 2;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  // int32 your_player_index = 1;
  if (this->_internal_your_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_your_player_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_ALL_READY_TO_RECIEVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_ALL_READY_TO_RECIEVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_ALL_READY_TO_RECIEVE::GetClassData() const { return &_class_data_; }


void S_MATCH_ALL_READY_TO_RECIEVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_ALL_READY_TO_RECIEVE*>(&to_msg);
  auto& from = static_cast<const S_MATCH_ALL_READY_TO_RECIEVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_ALL_READY_TO_RECIEVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::ProjectJ::MatchInitInfo::MergeFrom(
        from._internal_info());
  }
  if (from._internal_your_player_index() != 0) {
    _this->_internal_set_your_player_index(from._internal_your_player_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_ALL_READY_TO_RECIEVE::CopyFrom(const S_MATCH_ALL_READY_TO_RECIEVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_ALL_READY_TO_RECIEVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_ALL_READY_TO_RECIEVE::IsInitialized() const {
  return true;
}

void S_MATCH_ALL_READY_TO_RECIEVE::InternalSwap(S_MATCH_ALL_READY_TO_RECIEVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_MATCH_ALL_READY_TO_RECIEVE, _impl_.your_player_index_)
      + sizeof(S_MATCH_ALL_READY_TO_RECIEVE::_impl_.your_player_index_)
      - PROTOBUF_FIELD_OFFSET(S_MATCH_ALL_READY_TO_RECIEVE, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_ALL_READY_TO_RECIEVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[23]);
}

// ===================================================================

class S_MATCH_ITEM_GENERATED::_Internal {
 public:
};

void S_MATCH_ITEM_GENERATED::clear_items() {
  _impl_.items_.Clear();
}
S_MATCH_ITEM_GENERATED::S_MATCH_ITEM_GENERATED(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_ITEM_GENERATED)
}
S_MATCH_ITEM_GENERATED::S_MATCH_ITEM_GENERATED(const S_MATCH_ITEM_GENERATED& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_ITEM_GENERATED* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_ITEM_GENERATED)
}

inline void S_MATCH_ITEM_GENERATED::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_ITEM_GENERATED::~S_MATCH_ITEM_GENERATED() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_ITEM_GENERATED)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_ITEM_GENERATED::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void S_MATCH_ITEM_GENERATED::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_ITEM_GENERATED::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_ITEM_GENERATED)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_ITEM_GENERATED::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ProjectJ.Item items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_ITEM_GENERATED::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_ITEM_GENERATED)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProjectJ.Item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_ITEM_GENERATED)
  return target;
}

size_t S_MATCH_ITEM_GENERATED::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_ITEM_GENERATED)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProjectJ.Item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_ITEM_GENERATED::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_ITEM_GENERATED::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_ITEM_GENERATED::GetClassData() const { return &_class_data_; }


void S_MATCH_ITEM_GENERATED::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_ITEM_GENERATED*>(&to_msg);
  auto& from = static_cast<const S_MATCH_ITEM_GENERATED&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_ITEM_GENERATED)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_ITEM_GENERATED::CopyFrom(const S_MATCH_ITEM_GENERATED& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_ITEM_GENERATED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_ITEM_GENERATED::IsInitialized() const {
  return true;
}

void S_MATCH_ITEM_GENERATED::InternalSwap(S_MATCH_ITEM_GENERATED* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_ITEM_GENERATED::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[24]);
}

// ===================================================================

class C_MATCH_READY_TO_START::_Internal {
 public:
};

C_MATCH_READY_TO_START::C_MATCH_READY_TO_START(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_MATCH_READY_TO_START)
}
C_MATCH_READY_TO_START::C_MATCH_READY_TO_START(const C_MATCH_READY_TO_START& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_MATCH_READY_TO_START* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_index_ = from._impl_.player_index_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_MATCH_READY_TO_START)
}

inline void C_MATCH_READY_TO_START::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_MATCH_READY_TO_START::~C_MATCH_READY_TO_START() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_MATCH_READY_TO_START)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_MATCH_READY_TO_START::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_MATCH_READY_TO_START::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_MATCH_READY_TO_START::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_MATCH_READY_TO_START)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_MATCH_READY_TO_START::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 player_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_MATCH_READY_TO_START::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_MATCH_READY_TO_START)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_MATCH_READY_TO_START)
  return target;
}

size_t C_MATCH_READY_TO_START::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_MATCH_READY_TO_START)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_player_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCH_READY_TO_START::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_MATCH_READY_TO_START::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCH_READY_TO_START::GetClassData() const { return &_class_data_; }


void C_MATCH_READY_TO_START::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_MATCH_READY_TO_START*>(&to_msg);
  auto& from = static_cast<const C_MATCH_READY_TO_START&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_MATCH_READY_TO_START)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_index() != 0) {
    _this->_internal_set_player_index(from._internal_player_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_MATCH_READY_TO_START::CopyFrom(const C_MATCH_READY_TO_START& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_MATCH_READY_TO_START)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_MATCH_READY_TO_START::IsInitialized() const {
  return true;
}

void C_MATCH_READY_TO_START::InternalSwap(C_MATCH_READY_TO_START* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.player_index_, other->_impl_.player_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_MATCH_READY_TO_START::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[25]);
}

// ===================================================================

class S_MATCH_START::_Internal {
 public:
};

S_MATCH_START::S_MATCH_START(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_START)
}
S_MATCH_START::S_MATCH_START(const S_MATCH_START& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_START* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.end_tick_){}
    , decltype(_impl_.current_tick_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.end_tick_, &from._impl_.end_tick_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.current_tick_) -
    reinterpret_cast<char*>(&_impl_.end_tick_)) + sizeof(_impl_.current_tick_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_START)
}

inline void S_MATCH_START::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.end_tick_){uint64_t{0u}}
    , decltype(_impl_.current_tick_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_START::~S_MATCH_START() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_START)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_START::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_MATCH_START::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_START::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_START)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.end_tick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.current_tick_) -
      reinterpret_cast<char*>(&_impl_.end_tick_)) + sizeof(_impl_.current_tick_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_START::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 end_tick = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.end_tick_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 current_tick = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.current_tick_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_START::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_START)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 end_tick = 1;
  if (this->_internal_end_tick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_end_tick(), target);
  }

  // uint64 current_tick = 2;
  if (this->_internal_current_tick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_current_tick(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_START)
  return target;
}

size_t S_MATCH_START::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_START)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 end_tick = 1;
  if (this->_internal_end_tick() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_end_tick());
  }

  // uint64 current_tick = 2;
  if (this->_internal_current_tick() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_current_tick());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_START::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_START::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_START::GetClassData() const { return &_class_data_; }


void S_MATCH_START::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_START*>(&to_msg);
  auto& from = static_cast<const S_MATCH_START&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_START)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_end_tick() != 0) {
    _this->_internal_set_end_tick(from._internal_end_tick());
  }
  if (from._internal_current_tick() != 0) {
    _this->_internal_set_current_tick(from._internal_current_tick());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_START::CopyFrom(const S_MATCH_START& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_START)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_START::IsInitialized() const {
  return true;
}

void S_MATCH_START::InternalSwap(S_MATCH_START* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_MATCH_START, _impl_.current_tick_)
      + sizeof(S_MATCH_START::_impl_.current_tick_)
      - PROTOBUF_FIELD_OFFSET(S_MATCH_START, _impl_.end_tick_)>(
          reinterpret_cast<char*>(&_impl_.end_tick_),
          reinterpret_cast<char*>(&other->_impl_.end_tick_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_START::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[26]);
}

// ===================================================================

class C_MATCH_INFO_MyInfo::_Internal {
 public:
  static const ::ProjectJ::Vector& position(const C_MATCH_INFO_MyInfo* msg);
  static const ::ProjectJ::Rotator& rotation(const C_MATCH_INFO_MyInfo* msg);
};

const ::ProjectJ::Vector&
C_MATCH_INFO_MyInfo::_Internal::position(const C_MATCH_INFO_MyInfo* msg) {
  return *msg->_impl_.position_;
}
const ::ProjectJ::Rotator&
C_MATCH_INFO_MyInfo::_Internal::rotation(const C_MATCH_INFO_MyInfo* msg) {
  return *msg->_impl_.rotation_;
}
void C_MATCH_INFO_MyInfo::clear_position() {
  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
}
void C_MATCH_INFO_MyInfo::clear_rotation() {
  if (GetArenaForAllocation() == nullptr && _impl_.rotation_ != nullptr) {
    delete _impl_.rotation_;
  }
  _impl_.rotation_ = nullptr;
}
C_MATCH_INFO_MyInfo::C_MATCH_INFO_MyInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_MATCH_INFO.MyInfo)
}
C_MATCH_INFO_MyInfo::C_MATCH_INFO_MyInfo(const C_MATCH_INFO_MyInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_MATCH_INFO_MyInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.position_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::ProjectJ::Vector(*from._impl_.position_);
  }
  if (from._internal_has_rotation()) {
    _this->_impl_.rotation_ = new ::ProjectJ::Rotator(*from._impl_.rotation_);
  }
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_MATCH_INFO.MyInfo)
}

inline void C_MATCH_INFO_MyInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.position_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_MATCH_INFO_MyInfo::~C_MATCH_INFO_MyInfo() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_MATCH_INFO.MyInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_MATCH_INFO_MyInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.position_;
  if (this != internal_default_instance()) delete _impl_.rotation_;
}

void C_MATCH_INFO_MyInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_MATCH_INFO_MyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_MATCH_INFO.MyInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.rotation_ != nullptr) {
    delete _impl_.rotation_;
  }
  _impl_.rotation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_MATCH_INFO_MyInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ProjectJ.Vector position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.Rotator rotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_MATCH_INFO_MyInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_MATCH_INFO.MyInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProjectJ.Vector position = 1;
  if (this->_internal_has_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // .ProjectJ.Rotator rotation = 2;
  if (this->_internal_has_rotation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rotation(this),
        _Internal::rotation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_MATCH_INFO.MyInfo)
  return target;
}

size_t C_MATCH_INFO_MyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_MATCH_INFO.MyInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.Vector position = 1;
  if (this->_internal_has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.position_);
  }

  // .ProjectJ.Rotator rotation = 2;
  if (this->_internal_has_rotation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.rotation_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCH_INFO_MyInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_MATCH_INFO_MyInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCH_INFO_MyInfo::GetClassData() const { return &_class_data_; }


void C_MATCH_INFO_MyInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_MATCH_INFO_MyInfo*>(&to_msg);
  auto& from = static_cast<const C_MATCH_INFO_MyInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_MATCH_INFO.MyInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_position()) {
    _this->_internal_mutable_position()->::ProjectJ::Vector::MergeFrom(
        from._internal_position());
  }
  if (from._internal_has_rotation()) {
    _this->_internal_mutable_rotation()->::ProjectJ::Rotator::MergeFrom(
        from._internal_rotation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_MATCH_INFO_MyInfo::CopyFrom(const C_MATCH_INFO_MyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_MATCH_INFO.MyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_MATCH_INFO_MyInfo::IsInitialized() const {
  return true;
}

void C_MATCH_INFO_MyInfo::InternalSwap(C_MATCH_INFO_MyInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_MATCH_INFO_MyInfo, _impl_.rotation_)
      + sizeof(C_MATCH_INFO_MyInfo::_impl_.rotation_)
      - PROTOBUF_FIELD_OFFSET(C_MATCH_INFO_MyInfo, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_MATCH_INFO_MyInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[27]);
}

// ===================================================================

class C_MATCH_INFO::_Internal {
 public:
  static const ::ProjectJ::C_MATCH_INFO_MyInfo& info(const C_MATCH_INFO* msg);
};

const ::ProjectJ::C_MATCH_INFO_MyInfo&
C_MATCH_INFO::_Internal::info(const C_MATCH_INFO* msg) {
  return *msg->_impl_.info_;
}
C_MATCH_INFO::C_MATCH_INFO(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_MATCH_INFO)
}
C_MATCH_INFO::C_MATCH_INFO(const C_MATCH_INFO& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_MATCH_INFO* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.player_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::ProjectJ::C_MATCH_INFO_MyInfo(*from._impl_.info_);
  }
  _this->_impl_.player_index_ = from._impl_.player_index_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_MATCH_INFO)
}

inline void C_MATCH_INFO::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.player_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_MATCH_INFO::~C_MATCH_INFO() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_MATCH_INFO)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_MATCH_INFO::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void C_MATCH_INFO::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_MATCH_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_MATCH_INFO)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _impl_.player_index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_MATCH_INFO::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 player_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.C_MATCH_INFO.MyInfo info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_MATCH_INFO::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_MATCH_INFO)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_index(), target);
  }

  // .ProjectJ.C_MATCH_INFO.MyInfo info = 2;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_MATCH_INFO)
  return target;
}

size_t C_MATCH_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_MATCH_INFO)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.C_MATCH_INFO.MyInfo info = 2;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_player_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCH_INFO::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_MATCH_INFO::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCH_INFO::GetClassData() const { return &_class_data_; }


void C_MATCH_INFO::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_MATCH_INFO*>(&to_msg);
  auto& from = static_cast<const C_MATCH_INFO&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_MATCH_INFO)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::ProjectJ::C_MATCH_INFO_MyInfo::MergeFrom(
        from._internal_info());
  }
  if (from._internal_player_index() != 0) {
    _this->_internal_set_player_index(from._internal_player_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_MATCH_INFO::CopyFrom(const C_MATCH_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_MATCH_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_MATCH_INFO::IsInitialized() const {
  return true;
}

void C_MATCH_INFO::InternalSwap(C_MATCH_INFO* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_MATCH_INFO, _impl_.player_index_)
      + sizeof(C_MATCH_INFO::_impl_.player_index_)
      - PROTOBUF_FIELD_OFFSET(C_MATCH_INFO, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_MATCH_INFO::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[28]);
}

// ===================================================================

class S_MATCH_INFO::_Internal {
 public:
  static const ::ProjectJ::MatchInfo& info(const S_MATCH_INFO* msg);
};

const ::ProjectJ::MatchInfo&
S_MATCH_INFO::_Internal::info(const S_MATCH_INFO* msg) {
  return *msg->_impl_.info_;
}
void S_MATCH_INFO::clear_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
}
S_MATCH_INFO::S_MATCH_INFO(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_INFO)
}
S_MATCH_INFO::S_MATCH_INFO(const S_MATCH_INFO& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_INFO* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.current_tick_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::ProjectJ::MatchInfo(*from._impl_.info_);
  }
  _this->_impl_.current_tick_ = from._impl_.current_tick_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_INFO)
}

inline void S_MATCH_INFO::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.current_tick_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_INFO::~S_MATCH_INFO() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_INFO)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_INFO::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void S_MATCH_INFO::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_INFO)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _impl_.current_tick_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_INFO::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 current_tick = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.current_tick_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.MatchInfo info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_INFO::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_INFO)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 current_tick = 1;
  if (this->_internal_current_tick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_current_tick(), target);
  }

  // .ProjectJ.MatchInfo info = 2;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_INFO)
  return target;
}

size_t S_MATCH_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_INFO)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.MatchInfo info = 2;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  // uint64 current_tick = 1;
  if (this->_internal_current_tick() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_current_tick());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_INFO::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_INFO::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_INFO::GetClassData() const { return &_class_data_; }


void S_MATCH_INFO::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_INFO*>(&to_msg);
  auto& from = static_cast<const S_MATCH_INFO&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_INFO)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::ProjectJ::MatchInfo::MergeFrom(
        from._internal_info());
  }
  if (from._internal_current_tick() != 0) {
    _this->_internal_set_current_tick(from._internal_current_tick());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_INFO::CopyFrom(const S_MATCH_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_INFO::IsInitialized() const {
  return true;
}

void S_MATCH_INFO::InternalSwap(S_MATCH_INFO* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_MATCH_INFO, _impl_.current_tick_)
      + sizeof(S_MATCH_INFO::_impl_.current_tick_)
      - PROTOBUF_FIELD_OFFSET(S_MATCH_INFO, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_INFO::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[29]);
}

// ===================================================================

class S_MATCH_END::_Internal {
 public:
};

S_MATCH_END::S_MATCH_END(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_END)
}
S_MATCH_END::S_MATCH_END(const S_MATCH_END& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_END* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.chaser_score_){}
    , decltype(_impl_.fugitivie_first_score_){}
    , decltype(_impl_.fugitivie_second_score_){}
    , decltype(_impl_.fugitivie_third_score_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.chaser_score_, &from._impl_.chaser_score_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.fugitivie_third_score_) -
    reinterpret_cast<char*>(&_impl_.chaser_score_)) + sizeof(_impl_.fugitivie_third_score_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_END)
}

inline void S_MATCH_END::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.chaser_score_){0}
    , decltype(_impl_.fugitivie_first_score_){0}
    , decltype(_impl_.fugitivie_second_score_){0}
    , decltype(_impl_.fugitivie_third_score_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_END::~S_MATCH_END() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_END)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_END::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_MATCH_END::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_END::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_END)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.chaser_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.fugitivie_third_score_) -
      reinterpret_cast<char*>(&_impl_.chaser_score_)) + sizeof(_impl_.fugitivie_third_score_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_END::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 chaser_score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.chaser_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 fugitivie_first_score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.fugitivie_first_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 fugitivie_second_score = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.fugitivie_second_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 fugitivie_third_score = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.fugitivie_third_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_END::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_END)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chaser_score = 1;
  if (this->_internal_chaser_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_chaser_score(), target);
  }

  // int32 fugitivie_first_score = 2;
  if (this->_internal_fugitivie_first_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_fugitivie_first_score(), target);
  }

  // int32 fugitivie_second_score = 3;
  if (this->_internal_fugitivie_second_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_fugitivie_second_score(), target);
  }

  // int32 fugitivie_third_score = 4;
  if (this->_internal_fugitivie_third_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_fugitivie_third_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_END)
  return target;
}

size_t S_MATCH_END::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_END)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 chaser_score = 1;
  if (this->_internal_chaser_score() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_chaser_score());
  }

  // int32 fugitivie_first_score = 2;
  if (this->_internal_fugitivie_first_score() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_fugitivie_first_score());
  }

  // int32 fugitivie_second_score = 3;
  if (this->_internal_fugitivie_second_score() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_fugitivie_second_score());
  }

  // int32 fugitivie_third_score = 4;
  if (this->_internal_fugitivie_third_score() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_fugitivie_third_score());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_END::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_END::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_END::GetClassData() const { return &_class_data_; }


void S_MATCH_END::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_END*>(&to_msg);
  auto& from = static_cast<const S_MATCH_END&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_END)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_chaser_score() != 0) {
    _this->_internal_set_chaser_score(from._internal_chaser_score());
  }
  if (from._internal_fugitivie_first_score() != 0) {
    _this->_internal_set_fugitivie_first_score(from._internal_fugitivie_first_score());
  }
  if (from._internal_fugitivie_second_score() != 0) {
    _this->_internal_set_fugitivie_second_score(from._internal_fugitivie_second_score());
  }
  if (from._internal_fugitivie_third_score() != 0) {
    _this->_internal_set_fugitivie_third_score(from._internal_fugitivie_third_score());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_END::CopyFrom(const S_MATCH_END& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_END)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_END::IsInitialized() const {
  return true;
}

void S_MATCH_END::InternalSwap(S_MATCH_END* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_MATCH_END, _impl_.fugitivie_third_score_)
      + sizeof(S_MATCH_END::_impl_.fugitivie_third_score_)
      - PROTOBUF_FIELD_OFFSET(S_MATCH_END, _impl_.chaser_score_)>(
          reinterpret_cast<char*>(&_impl_.chaser_score_),
          reinterpret_cast<char*>(&other->_impl_.chaser_score_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_END::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[30]);
}

// ===================================================================

class C_MATCH_ITEM_PICKUP::_Internal {
 public:
};

C_MATCH_ITEM_PICKUP::C_MATCH_ITEM_PICKUP(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_MATCH_ITEM_PICKUP)
}
C_MATCH_ITEM_PICKUP::C_MATCH_ITEM_PICKUP(const C_MATCH_ITEM_PICKUP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_MATCH_ITEM_PICKUP* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_index_){}
    , decltype(_impl_.item_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_index_, &from._impl_.player_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.item_index_) -
    reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.item_index_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_MATCH_ITEM_PICKUP)
}

inline void C_MATCH_ITEM_PICKUP::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_index_){0}
    , decltype(_impl_.item_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_MATCH_ITEM_PICKUP::~C_MATCH_ITEM_PICKUP() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_MATCH_ITEM_PICKUP)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_MATCH_ITEM_PICKUP::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_MATCH_ITEM_PICKUP::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_MATCH_ITEM_PICKUP::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_MATCH_ITEM_PICKUP)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.item_index_) -
      reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.item_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_MATCH_ITEM_PICKUP::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 player_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.item_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_MATCH_ITEM_PICKUP::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_MATCH_ITEM_PICKUP)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_index(), target);
  }

  // int32 item_index = 2;
  if (this->_internal_item_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_item_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_MATCH_ITEM_PICKUP)
  return target;
}

size_t C_MATCH_ITEM_PICKUP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_MATCH_ITEM_PICKUP)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_player_index());
  }

  // int32 item_index = 2;
  if (this->_internal_item_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCH_ITEM_PICKUP::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_MATCH_ITEM_PICKUP::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCH_ITEM_PICKUP::GetClassData() const { return &_class_data_; }


void C_MATCH_ITEM_PICKUP::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_MATCH_ITEM_PICKUP*>(&to_msg);
  auto& from = static_cast<const C_MATCH_ITEM_PICKUP&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_MATCH_ITEM_PICKUP)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_index() != 0) {
    _this->_internal_set_player_index(from._internal_player_index());
  }
  if (from._internal_item_index() != 0) {
    _this->_internal_set_item_index(from._internal_item_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_MATCH_ITEM_PICKUP::CopyFrom(const C_MATCH_ITEM_PICKUP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_MATCH_ITEM_PICKUP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_MATCH_ITEM_PICKUP::IsInitialized() const {
  return true;
}

void C_MATCH_ITEM_PICKUP::InternalSwap(C_MATCH_ITEM_PICKUP* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_MATCH_ITEM_PICKUP, _impl_.item_index_)
      + sizeof(C_MATCH_ITEM_PICKUP::_impl_.item_index_)
      - PROTOBUF_FIELD_OFFSET(C_MATCH_ITEM_PICKUP, _impl_.player_index_)>(
          reinterpret_cast<char*>(&_impl_.player_index_),
          reinterpret_cast<char*>(&other->_impl_.player_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_MATCH_ITEM_PICKUP::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[31]);
}

// ===================================================================

class C_MATCH_ITEM_MOVE::_Internal {
 public:
};

C_MATCH_ITEM_MOVE::C_MATCH_ITEM_MOVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_MATCH_ITEM_MOVE)
}
C_MATCH_ITEM_MOVE::C_MATCH_ITEM_MOVE(const C_MATCH_ITEM_MOVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_MATCH_ITEM_MOVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_index_){}
    , decltype(_impl_.from_index_){}
    , decltype(_impl_.to_index_){}
    , decltype(_impl_.item_index_){}
    , decltype(_impl_.target_top_left_index_){}
    , decltype(_impl_.is_item_rotated_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_index_, &from._impl_.player_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_item_rotated_) -
    reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.is_item_rotated_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_MATCH_ITEM_MOVE)
}

inline void C_MATCH_ITEM_MOVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_index_){0}
    , decltype(_impl_.from_index_){0}
    , decltype(_impl_.to_index_){0}
    , decltype(_impl_.item_index_){0}
    , decltype(_impl_.target_top_left_index_){0}
    , decltype(_impl_.is_item_rotated_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_MATCH_ITEM_MOVE::~C_MATCH_ITEM_MOVE() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_MATCH_ITEM_MOVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_MATCH_ITEM_MOVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_MATCH_ITEM_MOVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_MATCH_ITEM_MOVE::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_MATCH_ITEM_MOVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_item_rotated_) -
      reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.is_item_rotated_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_MATCH_ITEM_MOVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 player_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 from_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.from_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 to_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.to_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.item_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 target_top_left_index = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.target_top_left_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_item_rotated = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.is_item_rotated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_MATCH_ITEM_MOVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_MATCH_ITEM_MOVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_index(), target);
  }

  // int32 from_index = 2;
  if (this->_internal_from_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_from_index(), target);
  }

  // int32 to_index = 3;
  if (this->_internal_to_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_to_index(), target);
  }

  // int32 item_index = 4;
  if (this->_internal_item_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_item_index(), target);
  }

  // int32 target_top_left_index = 5;
  if (this->_internal_target_top_left_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_target_top_left_index(), target);
  }

  // bool is_item_rotated = 6;
  if (this->_internal_is_item_rotated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_is_item_rotated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_MATCH_ITEM_MOVE)
  return target;
}

size_t C_MATCH_ITEM_MOVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_MATCH_ITEM_MOVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_player_index());
  }

  // int32 from_index = 2;
  if (this->_internal_from_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_from_index());
  }

  // int32 to_index = 3;
  if (this->_internal_to_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_to_index());
  }

  // int32 item_index = 4;
  if (this->_internal_item_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_index());
  }

  // int32 target_top_left_index = 5;
  if (this->_internal_target_top_left_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_target_top_left_index());
  }

  // bool is_item_rotated = 6;
  if (this->_internal_is_item_rotated() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCH_ITEM_MOVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_MATCH_ITEM_MOVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCH_ITEM_MOVE::GetClassData() const { return &_class_data_; }


void C_MATCH_ITEM_MOVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_MATCH_ITEM_MOVE*>(&to_msg);
  auto& from = static_cast<const C_MATCH_ITEM_MOVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_MATCH_ITEM_MOVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_index() != 0) {
    _this->_internal_set_player_index(from._internal_player_index());
  }
  if (from._internal_from_index() != 0) {
    _this->_internal_set_from_index(from._internal_from_index());
  }
  if (from._internal_to_index() != 0) {
    _this->_internal_set_to_index(from._internal_to_index());
  }
  if (from._internal_item_index() != 0) {
    _this->_internal_set_item_index(from._internal_item_index());
  }
  if (from._internal_target_top_left_index() != 0) {
    _this->_internal_set_target_top_left_index(from._internal_target_top_left_index());
  }
  if (from._internal_is_item_rotated() != 0) {
    _this->_internal_set_is_item_rotated(from._internal_is_item_rotated());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_MATCH_ITEM_MOVE::CopyFrom(const C_MATCH_ITEM_MOVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_MATCH_ITEM_MOVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_MATCH_ITEM_MOVE::IsInitialized() const {
  return true;
}

void C_MATCH_ITEM_MOVE::InternalSwap(C_MATCH_ITEM_MOVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_MATCH_ITEM_MOVE, _impl_.is_item_rotated_)
      + sizeof(C_MATCH_ITEM_MOVE::_impl_.is_item_rotated_)
      - PROTOBUF_FIELD_OFFSET(C_MATCH_ITEM_MOVE, _impl_.player_index_)>(
          reinterpret_cast<char*>(&_impl_.player_index_),
          reinterpret_cast<char*>(&other->_impl_.player_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_MATCH_ITEM_MOVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[32]);
}

// ===================================================================

class C_MATCH_ITEM_DROP::_Internal {
 public:
  static const ::ProjectJ::Vector& drop_item_position(const C_MATCH_ITEM_DROP* msg);
  static const ::ProjectJ::Rotator& drop_item_rotation(const C_MATCH_ITEM_DROP* msg);
};

const ::ProjectJ::Vector&
C_MATCH_ITEM_DROP::_Internal::drop_item_position(const C_MATCH_ITEM_DROP* msg) {
  return *msg->_impl_.drop_item_position_;
}
const ::ProjectJ::Rotator&
C_MATCH_ITEM_DROP::_Internal::drop_item_rotation(const C_MATCH_ITEM_DROP* msg) {
  return *msg->_impl_.drop_item_rotation_;
}
void C_MATCH_ITEM_DROP::clear_drop_item_position() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_item_position_ != nullptr) {
    delete _impl_.drop_item_position_;
  }
  _impl_.drop_item_position_ = nullptr;
}
void C_MATCH_ITEM_DROP::clear_drop_item_rotation() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_item_rotation_ != nullptr) {
    delete _impl_.drop_item_rotation_;
  }
  _impl_.drop_item_rotation_ = nullptr;
}
C_MATCH_ITEM_DROP::C_MATCH_ITEM_DROP(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_MATCH_ITEM_DROP)
}
C_MATCH_ITEM_DROP::C_MATCH_ITEM_DROP(const C_MATCH_ITEM_DROP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_MATCH_ITEM_DROP* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.drop_item_position_){nullptr}
    , decltype(_impl_.drop_item_rotation_){nullptr}
    , decltype(_impl_.player_index_){}
    , decltype(_impl_.item_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_drop_item_position()) {
    _this->_impl_.drop_item_position_ = new ::ProjectJ::Vector(*from._impl_.drop_item_position_);
  }
  if (from._internal_has_drop_item_rotation()) {
    _this->_impl_.drop_item_rotation_ = new ::ProjectJ::Rotator(*from._impl_.drop_item_rotation_);
  }
  ::memcpy(&_impl_.player_index_, &from._impl_.player_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.item_index_) -
    reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.item_index_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_MATCH_ITEM_DROP)
}

inline void C_MATCH_ITEM_DROP::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.drop_item_position_){nullptr}
    , decltype(_impl_.drop_item_rotation_){nullptr}
    , decltype(_impl_.player_index_){0}
    , decltype(_impl_.item_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_MATCH_ITEM_DROP::~C_MATCH_ITEM_DROP() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_MATCH_ITEM_DROP)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_MATCH_ITEM_DROP::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.drop_item_position_;
  if (this != internal_default_instance()) delete _impl_.drop_item_rotation_;
}

void C_MATCH_ITEM_DROP::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_MATCH_ITEM_DROP::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_MATCH_ITEM_DROP)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.drop_item_position_ != nullptr) {
    delete _impl_.drop_item_position_;
  }
  _impl_.drop_item_position_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.drop_item_rotation_ != nullptr) {
    delete _impl_.drop_item_rotation_;
  }
  _impl_.drop_item_rotation_ = nullptr;
  ::memset(&_impl_.player_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.item_index_) -
      reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.item_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_MATCH_ITEM_DROP::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 player_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.item_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.Vector drop_item_position = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_item_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.Rotator drop_item_rotation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_item_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_MATCH_ITEM_DROP::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_MATCH_ITEM_DROP)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_index(), target);
  }

  // int32 item_index = 2;
  if (this->_internal_item_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_item_index(), target);
  }

  // .ProjectJ.Vector drop_item_position = 3;
  if (this->_internal_has_drop_item_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::drop_item_position(this),
        _Internal::drop_item_position(this).GetCachedSize(), target, stream);
  }

  // .ProjectJ.Rotator drop_item_rotation = 4;
  if (this->_internal_has_drop_item_rotation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::drop_item_rotation(this),
        _Internal::drop_item_rotation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_MATCH_ITEM_DROP)
  return target;
}

size_t C_MATCH_ITEM_DROP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_MATCH_ITEM_DROP)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.Vector drop_item_position = 3;
  if (this->_internal_has_drop_item_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.drop_item_position_);
  }

  // .ProjectJ.Rotator drop_item_rotation = 4;
  if (this->_internal_has_drop_item_rotation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.drop_item_rotation_);
  }

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_player_index());
  }

  // int32 item_index = 2;
  if (this->_internal_item_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCH_ITEM_DROP::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_MATCH_ITEM_DROP::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCH_ITEM_DROP::GetClassData() const { return &_class_data_; }


void C_MATCH_ITEM_DROP::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_MATCH_ITEM_DROP*>(&to_msg);
  auto& from = static_cast<const C_MATCH_ITEM_DROP&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_MATCH_ITEM_DROP)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_drop_item_position()) {
    _this->_internal_mutable_drop_item_position()->::ProjectJ::Vector::MergeFrom(
        from._internal_drop_item_position());
  }
  if (from._internal_has_drop_item_rotation()) {
    _this->_internal_mutable_drop_item_rotation()->::ProjectJ::Rotator::MergeFrom(
        from._internal_drop_item_rotation());
  }
  if (from._internal_player_index() != 0) {
    _this->_internal_set_player_index(from._internal_player_index());
  }
  if (from._internal_item_index() != 0) {
    _this->_internal_set_item_index(from._internal_item_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_MATCH_ITEM_DROP::CopyFrom(const C_MATCH_ITEM_DROP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_MATCH_ITEM_DROP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_MATCH_ITEM_DROP::IsInitialized() const {
  return true;
}

void C_MATCH_ITEM_DROP::InternalSwap(C_MATCH_ITEM_DROP* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_MATCH_ITEM_DROP, _impl_.item_index_)
      + sizeof(C_MATCH_ITEM_DROP::_impl_.item_index_)
      - PROTOBUF_FIELD_OFFSET(C_MATCH_ITEM_DROP, _impl_.drop_item_position_)>(
          reinterpret_cast<char*>(&_impl_.drop_item_position_),
          reinterpret_cast<char*>(&other->_impl_.drop_item_position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_MATCH_ITEM_DROP::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[33]);
}

// ===================================================================

class S_MATCH_ITEM_SOMEONE_PICKUP::_Internal {
 public:
};

S_MATCH_ITEM_SOMEONE_PICKUP::S_MATCH_ITEM_SOMEONE_PICKUP(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_ITEM_SOMEONE_PICKUP)
}
S_MATCH_ITEM_SOMEONE_PICKUP::S_MATCH_ITEM_SOMEONE_PICKUP(const S_MATCH_ITEM_SOMEONE_PICKUP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_ITEM_SOMEONE_PICKUP* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_index_){}
    , decltype(_impl_.item_index_){}
    , decltype(_impl_.top_left_index_){}
    , decltype(_impl_.is_item_rotated_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_index_, &from._impl_.player_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_item_rotated_) -
    reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.is_item_rotated_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_ITEM_SOMEONE_PICKUP)
}

inline void S_MATCH_ITEM_SOMEONE_PICKUP::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_index_){0}
    , decltype(_impl_.item_index_){0}
    , decltype(_impl_.top_left_index_){0}
    , decltype(_impl_.is_item_rotated_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_ITEM_SOMEONE_PICKUP::~S_MATCH_ITEM_SOMEONE_PICKUP() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_ITEM_SOMEONE_PICKUP)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_ITEM_SOMEONE_PICKUP::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_MATCH_ITEM_SOMEONE_PICKUP::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_ITEM_SOMEONE_PICKUP::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_ITEM_SOMEONE_PICKUP)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_item_rotated_) -
      reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.is_item_rotated_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_ITEM_SOMEONE_PICKUP::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 player_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.item_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 top_left_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.top_left_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_item_rotated = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.is_item_rotated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_ITEM_SOMEONE_PICKUP::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_ITEM_SOMEONE_PICKUP)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_index(), target);
  }

  // int32 item_index = 2;
  if (this->_internal_item_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_item_index(), target);
  }

  // int32 top_left_index = 3;
  if (this->_internal_top_left_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_top_left_index(), target);
  }

  // bool is_item_rotated = 4;
  if (this->_internal_is_item_rotated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_item_rotated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_ITEM_SOMEONE_PICKUP)
  return target;
}

size_t S_MATCH_ITEM_SOMEONE_PICKUP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_ITEM_SOMEONE_PICKUP)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_player_index());
  }

  // int32 item_index = 2;
  if (this->_internal_item_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_index());
  }

  // int32 top_left_index = 3;
  if (this->_internal_top_left_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_top_left_index());
  }

  // bool is_item_rotated = 4;
  if (this->_internal_is_item_rotated() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_ITEM_SOMEONE_PICKUP::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_ITEM_SOMEONE_PICKUP::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_ITEM_SOMEONE_PICKUP::GetClassData() const { return &_class_data_; }


void S_MATCH_ITEM_SOMEONE_PICKUP::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_ITEM_SOMEONE_PICKUP*>(&to_msg);
  auto& from = static_cast<const S_MATCH_ITEM_SOMEONE_PICKUP&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_ITEM_SOMEONE_PICKUP)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_index() != 0) {
    _this->_internal_set_player_index(from._internal_player_index());
  }
  if (from._internal_item_index() != 0) {
    _this->_internal_set_item_index(from._internal_item_index());
  }
  if (from._internal_top_left_index() != 0) {
    _this->_internal_set_top_left_index(from._internal_top_left_index());
  }
  if (from._internal_is_item_rotated() != 0) {
    _this->_internal_set_is_item_rotated(from._internal_is_item_rotated());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_ITEM_SOMEONE_PICKUP::CopyFrom(const S_MATCH_ITEM_SOMEONE_PICKUP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_ITEM_SOMEONE_PICKUP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_ITEM_SOMEONE_PICKUP::IsInitialized() const {
  return true;
}

void S_MATCH_ITEM_SOMEONE_PICKUP::InternalSwap(S_MATCH_ITEM_SOMEONE_PICKUP* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_MATCH_ITEM_SOMEONE_PICKUP, _impl_.is_item_rotated_)
      + sizeof(S_MATCH_ITEM_SOMEONE_PICKUP::_impl_.is_item_rotated_)
      - PROTOBUF_FIELD_OFFSET(S_MATCH_ITEM_SOMEONE_PICKUP, _impl_.player_index_)>(
          reinterpret_cast<char*>(&_impl_.player_index_),
          reinterpret_cast<char*>(&other->_impl_.player_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_ITEM_SOMEONE_PICKUP::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[34]);
}

// ===================================================================

class S_MATCH_ITEM_SOMEONE_MOVE::_Internal {
 public:
};

S_MATCH_ITEM_SOMEONE_MOVE::S_MATCH_ITEM_SOMEONE_MOVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_ITEM_SOMEONE_MOVE)
}
S_MATCH_ITEM_SOMEONE_MOVE::S_MATCH_ITEM_SOMEONE_MOVE(const S_MATCH_ITEM_SOMEONE_MOVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_ITEM_SOMEONE_MOVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_index_){}
    , decltype(_impl_.from_index_){}
    , decltype(_impl_.to_index_){}
    , decltype(_impl_.item_index_){}
    , decltype(_impl_.top_left_index_){}
    , decltype(_impl_.is_item_rotated_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_index_, &from._impl_.player_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_item_rotated_) -
    reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.is_item_rotated_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_ITEM_SOMEONE_MOVE)
}

inline void S_MATCH_ITEM_SOMEONE_MOVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_index_){0}
    , decltype(_impl_.from_index_){0}
    , decltype(_impl_.to_index_){0}
    , decltype(_impl_.item_index_){0}
    , decltype(_impl_.top_left_index_){0}
    , decltype(_impl_.is_item_rotated_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_ITEM_SOMEONE_MOVE::~S_MATCH_ITEM_SOMEONE_MOVE() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_ITEM_SOMEONE_MOVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_ITEM_SOMEONE_MOVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_MATCH_ITEM_SOMEONE_MOVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_ITEM_SOMEONE_MOVE::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_ITEM_SOMEONE_MOVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_item_rotated_) -
      reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.is_item_rotated_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_ITEM_SOMEONE_MOVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 player_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 from_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.from_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 to_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.to_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.item_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 top_left_index = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.top_left_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_item_rotated = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.is_item_rotated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_ITEM_SOMEONE_MOVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_ITEM_SOMEONE_MOVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_index(), target);
  }

  // int32 from_index = 2;
  if (this->_internal_from_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_from_index(), target);
  }

  // int32 to_index = 3;
  if (this->_internal_to_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_to_index(), target);
  }

  // int32 item_index = 4;
  if (this->_internal_item_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_item_index(), target);
  }

  // int32 top_left_index = 5;
  if (this->_internal_top_left_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_top_left_index(), target);
  }

  // bool is_item_rotated = 6;
  if (this->_internal_is_item_rotated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_is_item_rotated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_ITEM_SOMEONE_MOVE)
  return target;
}

size_t S_MATCH_ITEM_SOMEONE_MOVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_ITEM_SOMEONE_MOVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_player_index());
  }

  // int32 from_index = 2;
  if (this->_internal_from_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_from_index());
  }

  // int32 to_index = 3;
  if (this->_internal_to_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_to_index());
  }

  // int32 item_index = 4;
  if (this->_internal_item_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_index());
  }

  // int32 top_left_index = 5;
  if (this->_internal_top_left_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_top_left_index());
  }

  // bool is_item_rotated = 6;
  if (this->_internal_is_item_rotated() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_ITEM_SOMEONE_MOVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_ITEM_SOMEONE_MOVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_ITEM_SOMEONE_MOVE::GetClassData() const { return &_class_data_; }


void S_MATCH_ITEM_SOMEONE_MOVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_ITEM_SOMEONE_MOVE*>(&to_msg);
  auto& from = static_cast<const S_MATCH_ITEM_SOMEONE_MOVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_ITEM_SOMEONE_MOVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_index() != 0) {
    _this->_internal_set_player_index(from._internal_player_index());
  }
  if (from._internal_from_index() != 0) {
    _this->_internal_set_from_index(from._internal_from_index());
  }
  if (from._internal_to_index() != 0) {
    _this->_internal_set_to_index(from._internal_to_index());
  }
  if (from._internal_item_index() != 0) {
    _this->_internal_set_item_index(from._internal_item_index());
  }
  if (from._internal_top_left_index() != 0) {
    _this->_internal_set_top_left_index(from._internal_top_left_index());
  }
  if (from._internal_is_item_rotated() != 0) {
    _this->_internal_set_is_item_rotated(from._internal_is_item_rotated());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_ITEM_SOMEONE_MOVE::CopyFrom(const S_MATCH_ITEM_SOMEONE_MOVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_ITEM_SOMEONE_MOVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_ITEM_SOMEONE_MOVE::IsInitialized() const {
  return true;
}

void S_MATCH_ITEM_SOMEONE_MOVE::InternalSwap(S_MATCH_ITEM_SOMEONE_MOVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_MATCH_ITEM_SOMEONE_MOVE, _impl_.is_item_rotated_)
      + sizeof(S_MATCH_ITEM_SOMEONE_MOVE::_impl_.is_item_rotated_)
      - PROTOBUF_FIELD_OFFSET(S_MATCH_ITEM_SOMEONE_MOVE, _impl_.player_index_)>(
          reinterpret_cast<char*>(&_impl_.player_index_),
          reinterpret_cast<char*>(&other->_impl_.player_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_ITEM_SOMEONE_MOVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[35]);
}

// ===================================================================

class S_MATCH_ITEM_SOMEONE_DROP::_Internal {
 public:
  static const ::ProjectJ::Vector& drop_item_position(const S_MATCH_ITEM_SOMEONE_DROP* msg);
  static const ::ProjectJ::Rotator& drop_item_rotation(const S_MATCH_ITEM_SOMEONE_DROP* msg);
};

const ::ProjectJ::Vector&
S_MATCH_ITEM_SOMEONE_DROP::_Internal::drop_item_position(const S_MATCH_ITEM_SOMEONE_DROP* msg) {
  return *msg->_impl_.drop_item_position_;
}
const ::ProjectJ::Rotator&
S_MATCH_ITEM_SOMEONE_DROP::_Internal::drop_item_rotation(const S_MATCH_ITEM_SOMEONE_DROP* msg) {
  return *msg->_impl_.drop_item_rotation_;
}
void S_MATCH_ITEM_SOMEONE_DROP::clear_drop_item_position() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_item_position_ != nullptr) {
    delete _impl_.drop_item_position_;
  }
  _impl_.drop_item_position_ = nullptr;
}
void S_MATCH_ITEM_SOMEONE_DROP::clear_drop_item_rotation() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_item_rotation_ != nullptr) {
    delete _impl_.drop_item_rotation_;
  }
  _impl_.drop_item_rotation_ = nullptr;
}
S_MATCH_ITEM_SOMEONE_DROP::S_MATCH_ITEM_SOMEONE_DROP(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_ITEM_SOMEONE_DROP)
}
S_MATCH_ITEM_SOMEONE_DROP::S_MATCH_ITEM_SOMEONE_DROP(const S_MATCH_ITEM_SOMEONE_DROP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_ITEM_SOMEONE_DROP* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.drop_item_position_){nullptr}
    , decltype(_impl_.drop_item_rotation_){nullptr}
    , decltype(_impl_.player_index_){}
    , decltype(_impl_.item_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_drop_item_position()) {
    _this->_impl_.drop_item_position_ = new ::ProjectJ::Vector(*from._impl_.drop_item_position_);
  }
  if (from._internal_has_drop_item_rotation()) {
    _this->_impl_.drop_item_rotation_ = new ::ProjectJ::Rotator(*from._impl_.drop_item_rotation_);
  }
  ::memcpy(&_impl_.player_index_, &from._impl_.player_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.item_index_) -
    reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.item_index_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_ITEM_SOMEONE_DROP)
}

inline void S_MATCH_ITEM_SOMEONE_DROP::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.drop_item_position_){nullptr}
    , decltype(_impl_.drop_item_rotation_){nullptr}
    , decltype(_impl_.player_index_){0}
    , decltype(_impl_.item_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_ITEM_SOMEONE_DROP::~S_MATCH_ITEM_SOMEONE_DROP() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_ITEM_SOMEONE_DROP)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_ITEM_SOMEONE_DROP::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.drop_item_position_;
  if (this != internal_default_instance()) delete _impl_.drop_item_rotation_;
}

void S_MATCH_ITEM_SOMEONE_DROP::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_ITEM_SOMEONE_DROP::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_ITEM_SOMEONE_DROP)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.drop_item_position_ != nullptr) {
    delete _impl_.drop_item_position_;
  }
  _impl_.drop_item_position_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.drop_item_rotation_ != nullptr) {
    delete _impl_.drop_item_rotation_;
  }
  _impl_.drop_item_rotation_ = nullptr;
  ::memset(&_impl_.player_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.item_index_) -
      reinterpret_cast<char*>(&_impl_.player_index_)) + sizeof(_impl_.item_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_ITEM_SOMEONE_DROP::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 player_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.item_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.Vector drop_item_position = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_item_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.Rotator drop_item_rotation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_item_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_ITEM_SOMEONE_DROP::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_ITEM_SOMEONE_DROP)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_index(), target);
  }

  // int32 item_index = 2;
  if (this->_internal_item_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_item_index(), target);
  }

  // .ProjectJ.Vector drop_item_position = 3;
  if (this->_internal_has_drop_item_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::drop_item_position(this),
        _Internal::drop_item_position(this).GetCachedSize(), target, stream);
  }

  // .ProjectJ.Rotator drop_item_rotation = 4;
  if (this->_internal_has_drop_item_rotation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::drop_item_rotation(this),
        _Internal::drop_item_rotation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_ITEM_SOMEONE_DROP)
  return target;
}

size_t S_MATCH_ITEM_SOMEONE_DROP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_ITEM_SOMEONE_DROP)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.Vector drop_item_position = 3;
  if (this->_internal_has_drop_item_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.drop_item_position_);
  }

  // .ProjectJ.Rotator drop_item_rotation = 4;
  if (this->_internal_has_drop_item_rotation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.drop_item_rotation_);
  }

  // int32 player_index = 1;
  if (this->_internal_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_player_index());
  }

  // int32 item_index = 2;
  if (this->_internal_item_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_ITEM_SOMEONE_DROP::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_ITEM_SOMEONE_DROP::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_ITEM_SOMEONE_DROP::GetClassData() const { return &_class_data_; }


void S_MATCH_ITEM_SOMEONE_DROP::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_ITEM_SOMEONE_DROP*>(&to_msg);
  auto& from = static_cast<const S_MATCH_ITEM_SOMEONE_DROP&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_ITEM_SOMEONE_DROP)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_drop_item_position()) {
    _this->_internal_mutable_drop_item_position()->::ProjectJ::Vector::MergeFrom(
        from._internal_drop_item_position());
  }
  if (from._internal_has_drop_item_rotation()) {
    _this->_internal_mutable_drop_item_rotation()->::ProjectJ::Rotator::MergeFrom(
        from._internal_drop_item_rotation());
  }
  if (from._internal_player_index() != 0) {
    _this->_internal_set_player_index(from._internal_player_index());
  }
  if (from._internal_item_index() != 0) {
    _this->_internal_set_item_index(from._internal_item_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_ITEM_SOMEONE_DROP::CopyFrom(const S_MATCH_ITEM_SOMEONE_DROP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_ITEM_SOMEONE_DROP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_ITEM_SOMEONE_DROP::IsInitialized() const {
  return true;
}

void S_MATCH_ITEM_SOMEONE_DROP::InternalSwap(S_MATCH_ITEM_SOMEONE_DROP* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_MATCH_ITEM_SOMEONE_DROP, _impl_.item_index_)
      + sizeof(S_MATCH_ITEM_SOMEONE_DROP::_impl_.item_index_)
      - PROTOBUF_FIELD_OFFSET(S_MATCH_ITEM_SOMEONE_DROP, _impl_.drop_item_position_)>(
          reinterpret_cast<char*>(&_impl_.drop_item_position_),
          reinterpret_cast<char*>(&other->_impl_.drop_item_position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_ITEM_SOMEONE_DROP::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[36]);
}

// ===================================================================

class S_MATCH_SCALE_ON_CHANGED::_Internal {
 public:
};

S_MATCH_SCALE_ON_CHANGED::S_MATCH_SCALE_ON_CHANGED(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_SCALE_ON_CHANGED)
}
S_MATCH_SCALE_ON_CHANGED::S_MATCH_SCALE_ON_CHANGED(const S_MATCH_SCALE_ON_CHANGED& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_SCALE_ON_CHANGED* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.scale_index_){}
    , decltype(_impl_.current_weight_){}
    , decltype(_impl_.is_operating_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.scale_index_, &from._impl_.scale_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_operating_) -
    reinterpret_cast<char*>(&_impl_.scale_index_)) + sizeof(_impl_.is_operating_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_SCALE_ON_CHANGED)
}

inline void S_MATCH_SCALE_ON_CHANGED::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.scale_index_){0}
    , decltype(_impl_.current_weight_){0}
    , decltype(_impl_.is_operating_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_SCALE_ON_CHANGED::~S_MATCH_SCALE_ON_CHANGED() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_SCALE_ON_CHANGED)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_SCALE_ON_CHANGED::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_MATCH_SCALE_ON_CHANGED::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_SCALE_ON_CHANGED::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_SCALE_ON_CHANGED)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.scale_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_operating_) -
      reinterpret_cast<char*>(&_impl_.scale_index_)) + sizeof(_impl_.is_operating_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_SCALE_ON_CHANGED::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 scale_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.scale_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 current_weight = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.current_weight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_operating = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.is_operating_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_SCALE_ON_CHANGED::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_SCALE_ON_CHANGED)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 scale_index = 1;
  if (this->_internal_scale_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_scale_index(), target);
  }

  // int32 current_weight = 2;
  if (this->_internal_current_weight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_current_weight(), target);
  }

  // bool is_operating = 3;
  if (this->_internal_is_operating() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_operating(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_SCALE_ON_CHANGED)
  return target;
}

size_t S_MATCH_SCALE_ON_CHANGED::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_SCALE_ON_CHANGED)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 scale_index = 1;
  if (this->_internal_scale_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_scale_index());
  }

  // int32 current_weight = 2;
  if (this->_internal_current_weight() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_current_weight());
  }

  // bool is_operating = 3;
  if (this->_internal_is_operating() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_SCALE_ON_CHANGED::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_SCALE_ON_CHANGED::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_SCALE_ON_CHANGED::GetClassData() const { return &_class_data_; }


void S_MATCH_SCALE_ON_CHANGED::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_SCALE_ON_CHANGED*>(&to_msg);
  auto& from = static_cast<const S_MATCH_SCALE_ON_CHANGED&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_SCALE_ON_CHANGED)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_scale_index() != 0) {
    _this->_internal_set_scale_index(from._internal_scale_index());
  }
  if (from._internal_current_weight() != 0) {
    _this->_internal_set_current_weight(from._internal_current_weight());
  }
  if (from._internal_is_operating() != 0) {
    _this->_internal_set_is_operating(from._internal_is_operating());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_SCALE_ON_CHANGED::CopyFrom(const S_MATCH_SCALE_ON_CHANGED& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_SCALE_ON_CHANGED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_SCALE_ON_CHANGED::IsInitialized() const {
  return true;
}

void S_MATCH_SCALE_ON_CHANGED::InternalSwap(S_MATCH_SCALE_ON_CHANGED* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_MATCH_SCALE_ON_CHANGED, _impl_.is_operating_)
      + sizeof(S_MATCH_SCALE_ON_CHANGED::_impl_.is_operating_)
      - PROTOBUF_FIELD_OFFSET(S_MATCH_SCALE_ON_CHANGED, _impl_.scale_index_)>(
          reinterpret_cast<char*>(&_impl_.scale_index_),
          reinterpret_cast<char*>(&other->_impl_.scale_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_SCALE_ON_CHANGED::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[37]);
}

// ===================================================================

class C_MATCH_CHASER_ATTACK::_Internal {
 public:
  static const ::ProjectJ::Vector& attack_position(const C_MATCH_CHASER_ATTACK* msg);
  static const ::ProjectJ::Rotator& attack_rotation(const C_MATCH_CHASER_ATTACK* msg);
};

const ::ProjectJ::Vector&
C_MATCH_CHASER_ATTACK::_Internal::attack_position(const C_MATCH_CHASER_ATTACK* msg) {
  return *msg->_impl_.attack_position_;
}
const ::ProjectJ::Rotator&
C_MATCH_CHASER_ATTACK::_Internal::attack_rotation(const C_MATCH_CHASER_ATTACK* msg) {
  return *msg->_impl_.attack_rotation_;
}
void C_MATCH_CHASER_ATTACK::clear_attack_position() {
  if (GetArenaForAllocation() == nullptr && _impl_.attack_position_ != nullptr) {
    delete _impl_.attack_position_;
  }
  _impl_.attack_position_ = nullptr;
}
void C_MATCH_CHASER_ATTACK::clear_attack_rotation() {
  if (GetArenaForAllocation() == nullptr && _impl_.attack_rotation_ != nullptr) {
    delete _impl_.attack_rotation_;
  }
  _impl_.attack_rotation_ = nullptr;
}
C_MATCH_CHASER_ATTACK::C_MATCH_CHASER_ATTACK(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_MATCH_CHASER_ATTACK)
}
C_MATCH_CHASER_ATTACK::C_MATCH_CHASER_ATTACK(const C_MATCH_CHASER_ATTACK& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_MATCH_CHASER_ATTACK* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.attack_position_){nullptr}
    , decltype(_impl_.attack_rotation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_attack_position()) {
    _this->_impl_.attack_position_ = new ::ProjectJ::Vector(*from._impl_.attack_position_);
  }
  if (from._internal_has_attack_rotation()) {
    _this->_impl_.attack_rotation_ = new ::ProjectJ::Rotator(*from._impl_.attack_rotation_);
  }
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_MATCH_CHASER_ATTACK)
}

inline void C_MATCH_CHASER_ATTACK::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.attack_position_){nullptr}
    , decltype(_impl_.attack_rotation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_MATCH_CHASER_ATTACK::~C_MATCH_CHASER_ATTACK() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_MATCH_CHASER_ATTACK)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_MATCH_CHASER_ATTACK::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.attack_position_;
  if (this != internal_default_instance()) delete _impl_.attack_rotation_;
}

void C_MATCH_CHASER_ATTACK::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_MATCH_CHASER_ATTACK::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_MATCH_CHASER_ATTACK)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.attack_position_ != nullptr) {
    delete _impl_.attack_position_;
  }
  _impl_.attack_position_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.attack_rotation_ != nullptr) {
    delete _impl_.attack_rotation_;
  }
  _impl_.attack_rotation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_MATCH_CHASER_ATTACK::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ProjectJ.Vector attack_position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_attack_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.Rotator attack_rotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_attack_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_MATCH_CHASER_ATTACK::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_MATCH_CHASER_ATTACK)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProjectJ.Vector attack_position = 1;
  if (this->_internal_has_attack_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::attack_position(this),
        _Internal::attack_position(this).GetCachedSize(), target, stream);
  }

  // .ProjectJ.Rotator attack_rotation = 2;
  if (this->_internal_has_attack_rotation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::attack_rotation(this),
        _Internal::attack_rotation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_MATCH_CHASER_ATTACK)
  return target;
}

size_t C_MATCH_CHASER_ATTACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_MATCH_CHASER_ATTACK)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.Vector attack_position = 1;
  if (this->_internal_has_attack_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.attack_position_);
  }

  // .ProjectJ.Rotator attack_rotation = 2;
  if (this->_internal_has_attack_rotation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.attack_rotation_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCH_CHASER_ATTACK::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_MATCH_CHASER_ATTACK::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCH_CHASER_ATTACK::GetClassData() const { return &_class_data_; }


void C_MATCH_CHASER_ATTACK::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_MATCH_CHASER_ATTACK*>(&to_msg);
  auto& from = static_cast<const C_MATCH_CHASER_ATTACK&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_MATCH_CHASER_ATTACK)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_attack_position()) {
    _this->_internal_mutable_attack_position()->::ProjectJ::Vector::MergeFrom(
        from._internal_attack_position());
  }
  if (from._internal_has_attack_rotation()) {
    _this->_internal_mutable_attack_rotation()->::ProjectJ::Rotator::MergeFrom(
        from._internal_attack_rotation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_MATCH_CHASER_ATTACK::CopyFrom(const C_MATCH_CHASER_ATTACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_MATCH_CHASER_ATTACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_MATCH_CHASER_ATTACK::IsInitialized() const {
  return true;
}

void C_MATCH_CHASER_ATTACK::InternalSwap(C_MATCH_CHASER_ATTACK* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_MATCH_CHASER_ATTACK, _impl_.attack_rotation_)
      + sizeof(C_MATCH_CHASER_ATTACK::_impl_.attack_rotation_)
      - PROTOBUF_FIELD_OFFSET(C_MATCH_CHASER_ATTACK, _impl_.attack_position_)>(
          reinterpret_cast<char*>(&_impl_.attack_position_),
          reinterpret_cast<char*>(&other->_impl_.attack_position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_MATCH_CHASER_ATTACK::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[38]);
}

// ===================================================================

class S_MATCH_CHASER_ATTACK::_Internal {
 public:
  static const ::ProjectJ::Vector& attack_position(const S_MATCH_CHASER_ATTACK* msg);
  static const ::ProjectJ::Rotator& attack_rotation(const S_MATCH_CHASER_ATTACK* msg);
};

const ::ProjectJ::Vector&
S_MATCH_CHASER_ATTACK::_Internal::attack_position(const S_MATCH_CHASER_ATTACK* msg) {
  return *msg->_impl_.attack_position_;
}
const ::ProjectJ::Rotator&
S_MATCH_CHASER_ATTACK::_Internal::attack_rotation(const S_MATCH_CHASER_ATTACK* msg) {
  return *msg->_impl_.attack_rotation_;
}
void S_MATCH_CHASER_ATTACK::clear_attack_position() {
  if (GetArenaForAllocation() == nullptr && _impl_.attack_position_ != nullptr) {
    delete _impl_.attack_position_;
  }
  _impl_.attack_position_ = nullptr;
}
void S_MATCH_CHASER_ATTACK::clear_attack_rotation() {
  if (GetArenaForAllocation() == nullptr && _impl_.attack_rotation_ != nullptr) {
    delete _impl_.attack_rotation_;
  }
  _impl_.attack_rotation_ = nullptr;
}
S_MATCH_CHASER_ATTACK::S_MATCH_CHASER_ATTACK(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_CHASER_ATTACK)
}
S_MATCH_CHASER_ATTACK::S_MATCH_CHASER_ATTACK(const S_MATCH_CHASER_ATTACK& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_CHASER_ATTACK* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.attack_position_){nullptr}
    , decltype(_impl_.attack_rotation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_attack_position()) {
    _this->_impl_.attack_position_ = new ::ProjectJ::Vector(*from._impl_.attack_position_);
  }
  if (from._internal_has_attack_rotation()) {
    _this->_impl_.attack_rotation_ = new ::ProjectJ::Rotator(*from._impl_.attack_rotation_);
  }
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_CHASER_ATTACK)
}

inline void S_MATCH_CHASER_ATTACK::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.attack_position_){nullptr}
    , decltype(_impl_.attack_rotation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_CHASER_ATTACK::~S_MATCH_CHASER_ATTACK() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_CHASER_ATTACK)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_CHASER_ATTACK::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.attack_position_;
  if (this != internal_default_instance()) delete _impl_.attack_rotation_;
}

void S_MATCH_CHASER_ATTACK::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_CHASER_ATTACK::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_CHASER_ATTACK)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.attack_position_ != nullptr) {
    delete _impl_.attack_position_;
  }
  _impl_.attack_position_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.attack_rotation_ != nullptr) {
    delete _impl_.attack_rotation_;
  }
  _impl_.attack_rotation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_CHASER_ATTACK::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ProjectJ.Vector attack_position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_attack_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.Rotator attack_rotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_attack_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_CHASER_ATTACK::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_CHASER_ATTACK)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProjectJ.Vector attack_position = 1;
  if (this->_internal_has_attack_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::attack_position(this),
        _Internal::attack_position(this).GetCachedSize(), target, stream);
  }

  // .ProjectJ.Rotator attack_rotation = 2;
  if (this->_internal_has_attack_rotation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::attack_rotation(this),
        _Internal::attack_rotation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_CHASER_ATTACK)
  return target;
}

size_t S_MATCH_CHASER_ATTACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_CHASER_ATTACK)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.Vector attack_position = 1;
  if (this->_internal_has_attack_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.attack_position_);
  }

  // .ProjectJ.Rotator attack_rotation = 2;
  if (this->_internal_has_attack_rotation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.attack_rotation_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_CHASER_ATTACK::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_CHASER_ATTACK::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_CHASER_ATTACK::GetClassData() const { return &_class_data_; }


void S_MATCH_CHASER_ATTACK::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_CHASER_ATTACK*>(&to_msg);
  auto& from = static_cast<const S_MATCH_CHASER_ATTACK&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_CHASER_ATTACK)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_attack_position()) {
    _this->_internal_mutable_attack_position()->::ProjectJ::Vector::MergeFrom(
        from._internal_attack_position());
  }
  if (from._internal_has_attack_rotation()) {
    _this->_internal_mutable_attack_rotation()->::ProjectJ::Rotator::MergeFrom(
        from._internal_attack_rotation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_CHASER_ATTACK::CopyFrom(const S_MATCH_CHASER_ATTACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_CHASER_ATTACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_CHASER_ATTACK::IsInitialized() const {
  return true;
}

void S_MATCH_CHASER_ATTACK::InternalSwap(S_MATCH_CHASER_ATTACK* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_MATCH_CHASER_ATTACK, _impl_.attack_rotation_)
      + sizeof(S_MATCH_CHASER_ATTACK::_impl_.attack_rotation_)
      - PROTOBUF_FIELD_OFFSET(S_MATCH_CHASER_ATTACK, _impl_.attack_position_)>(
          reinterpret_cast<char*>(&_impl_.attack_position_),
          reinterpret_cast<char*>(&other->_impl_.attack_position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_CHASER_ATTACK::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[39]);
}

// ===================================================================

class C_MATCH_CHASER_HIT::_Internal {
 public:
  static const ::ProjectJ::Vector& attack_position(const C_MATCH_CHASER_HIT* msg);
  static const ::ProjectJ::Rotator& attack_rotation(const C_MATCH_CHASER_HIT* msg);
};

const ::ProjectJ::Vector&
C_MATCH_CHASER_HIT::_Internal::attack_position(const C_MATCH_CHASER_HIT* msg) {
  return *msg->_impl_.attack_position_;
}
const ::ProjectJ::Rotator&
C_MATCH_CHASER_HIT::_Internal::attack_rotation(const C_MATCH_CHASER_HIT* msg) {
  return *msg->_impl_.attack_rotation_;
}
void C_MATCH_CHASER_HIT::clear_attack_position() {
  if (GetArenaForAllocation() == nullptr && _impl_.attack_position_ != nullptr) {
    delete _impl_.attack_position_;
  }
  _impl_.attack_position_ = nullptr;
}
void C_MATCH_CHASER_HIT::clear_attack_rotation() {
  if (GetArenaForAllocation() == nullptr && _impl_.attack_rotation_ != nullptr) {
    delete _impl_.attack_rotation_;
  }
  _impl_.attack_rotation_ = nullptr;
}
C_MATCH_CHASER_HIT::C_MATCH_CHASER_HIT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.C_MATCH_CHASER_HIT)
}
C_MATCH_CHASER_HIT::C_MATCH_CHASER_HIT(const C_MATCH_CHASER_HIT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_MATCH_CHASER_HIT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.attack_position_){nullptr}
    , decltype(_impl_.attack_rotation_){nullptr}
    , decltype(_impl_.hit_player_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_attack_position()) {
    _this->_impl_.attack_position_ = new ::ProjectJ::Vector(*from._impl_.attack_position_);
  }
  if (from._internal_has_attack_rotation()) {
    _this->_impl_.attack_rotation_ = new ::ProjectJ::Rotator(*from._impl_.attack_rotation_);
  }
  _this->_impl_.hit_player_index_ = from._impl_.hit_player_index_;
  // @@protoc_insertion_point(copy_constructor:ProjectJ.C_MATCH_CHASER_HIT)
}

inline void C_MATCH_CHASER_HIT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.attack_position_){nullptr}
    , decltype(_impl_.attack_rotation_){nullptr}
    , decltype(_impl_.hit_player_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C_MATCH_CHASER_HIT::~C_MATCH_CHASER_HIT() {
  // @@protoc_insertion_point(destructor:ProjectJ.C_MATCH_CHASER_HIT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_MATCH_CHASER_HIT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.attack_position_;
  if (this != internal_default_instance()) delete _impl_.attack_rotation_;
}

void C_MATCH_CHASER_HIT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_MATCH_CHASER_HIT::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.C_MATCH_CHASER_HIT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.attack_position_ != nullptr) {
    delete _impl_.attack_position_;
  }
  _impl_.attack_position_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.attack_rotation_ != nullptr) {
    delete _impl_.attack_rotation_;
  }
  _impl_.attack_rotation_ = nullptr;
  _impl_.hit_player_index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_MATCH_CHASER_HIT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ProjectJ.Vector attack_position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_attack_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.Rotator attack_rotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_attack_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hit_player_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.hit_player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_MATCH_CHASER_HIT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.C_MATCH_CHASER_HIT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProjectJ.Vector attack_position = 1;
  if (this->_internal_has_attack_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::attack_position(this),
        _Internal::attack_position(this).GetCachedSize(), target, stream);
  }

  // .ProjectJ.Rotator attack_rotation = 2;
  if (this->_internal_has_attack_rotation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::attack_rotation(this),
        _Internal::attack_rotation(this).GetCachedSize(), target, stream);
  }

  // int32 hit_player_index = 3;
  if (this->_internal_hit_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_hit_player_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.C_MATCH_CHASER_HIT)
  return target;
}

size_t C_MATCH_CHASER_HIT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.C_MATCH_CHASER_HIT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProjectJ.Vector attack_position = 1;
  if (this->_internal_has_attack_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.attack_position_);
  }

  // .ProjectJ.Rotator attack_rotation = 2;
  if (this->_internal_has_attack_rotation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.attack_rotation_);
  }

  // int32 hit_player_index = 3;
  if (this->_internal_hit_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hit_player_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCH_CHASER_HIT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_MATCH_CHASER_HIT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCH_CHASER_HIT::GetClassData() const { return &_class_data_; }


void C_MATCH_CHASER_HIT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_MATCH_CHASER_HIT*>(&to_msg);
  auto& from = static_cast<const C_MATCH_CHASER_HIT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.C_MATCH_CHASER_HIT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_attack_position()) {
    _this->_internal_mutable_attack_position()->::ProjectJ::Vector::MergeFrom(
        from._internal_attack_position());
  }
  if (from._internal_has_attack_rotation()) {
    _this->_internal_mutable_attack_rotation()->::ProjectJ::Rotator::MergeFrom(
        from._internal_attack_rotation());
  }
  if (from._internal_hit_player_index() != 0) {
    _this->_internal_set_hit_player_index(from._internal_hit_player_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_MATCH_CHASER_HIT::CopyFrom(const C_MATCH_CHASER_HIT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.C_MATCH_CHASER_HIT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_MATCH_CHASER_HIT::IsInitialized() const {
  return true;
}

void C_MATCH_CHASER_HIT::InternalSwap(C_MATCH_CHASER_HIT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_MATCH_CHASER_HIT, _impl_.hit_player_index_)
      + sizeof(C_MATCH_CHASER_HIT::_impl_.hit_player_index_)
      - PROTOBUF_FIELD_OFFSET(C_MATCH_CHASER_HIT, _impl_.attack_position_)>(
          reinterpret_cast<char*>(&_impl_.attack_position_),
          reinterpret_cast<char*>(&other->_impl_.attack_position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_MATCH_CHASER_HIT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[40]);
}

// ===================================================================

class S_MATCH_CHASER_HIT::_Internal {
 public:
};

S_MATCH_CHASER_HIT::S_MATCH_CHASER_HIT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ProjectJ.S_MATCH_CHASER_HIT)
}
S_MATCH_CHASER_HIT::S_MATCH_CHASER_HIT(const S_MATCH_CHASER_HIT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCH_CHASER_HIT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.hit_player_index_){}
    , decltype(_impl_.changed_state_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.changed_state_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.changed_state_));
  // @@protoc_insertion_point(copy_constructor:ProjectJ.S_MATCH_CHASER_HIT)
}

inline void S_MATCH_CHASER_HIT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){false}
    , decltype(_impl_.hit_player_index_){0}
    , decltype(_impl_.changed_state_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCH_CHASER_HIT::~S_MATCH_CHASER_HIT() {
  // @@protoc_insertion_point(destructor:ProjectJ.S_MATCH_CHASER_HIT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCH_CHASER_HIT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_MATCH_CHASER_HIT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCH_CHASER_HIT::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectJ.S_MATCH_CHASER_HIT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.changed_state_) -
      reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.changed_state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCH_CHASER_HIT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hit_player_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.hit_player_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProjectJ.MatchPlayerState changed_state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_changed_state(static_cast<::ProjectJ::MatchPlayerState>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCH_CHASER_HIT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProjectJ.S_MATCH_CHASER_HIT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  // int32 hit_player_index = 2;
  if (this->_internal_hit_player_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_hit_player_index(), target);
  }

  // .ProjectJ.MatchPlayerState changed_state = 3;
  if (this->_internal_changed_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_changed_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectJ.S_MATCH_CHASER_HIT)
  return target;
}

size_t S_MATCH_CHASER_HIT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectJ.S_MATCH_CHASER_HIT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 + 1;
  }

  // int32 hit_player_index = 2;
  if (this->_internal_hit_player_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hit_player_index());
  }

  // .ProjectJ.MatchPlayerState changed_state = 3;
  if (this->_internal_changed_state() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_changed_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCH_CHASER_HIT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCH_CHASER_HIT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCH_CHASER_HIT::GetClassData() const { return &_class_data_; }


void S_MATCH_CHASER_HIT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCH_CHASER_HIT*>(&to_msg);
  auto& from = static_cast<const S_MATCH_CHASER_HIT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProjectJ.S_MATCH_CHASER_HIT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  if (from._internal_hit_player_index() != 0) {
    _this->_internal_set_hit_player_index(from._internal_hit_player_index());
  }
  if (from._internal_changed_state() != 0) {
    _this->_internal_set_changed_state(from._internal_changed_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCH_CHASER_HIT::CopyFrom(const S_MATCH_CHASER_HIT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectJ.S_MATCH_CHASER_HIT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCH_CHASER_HIT::IsInitialized() const {
  return true;
}

void S_MATCH_CHASER_HIT::InternalSwap(S_MATCH_CHASER_HIT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_MATCH_CHASER_HIT, _impl_.changed_state_)
      + sizeof(S_MATCH_CHASER_HIT::_impl_.changed_state_)
      - PROTOBUF_FIELD_OFFSET(S_MATCH_CHASER_HIT, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCH_CHASER_HIT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2eproto_getter, &descriptor_table_Message_2eproto_once,
      file_level_metadata_Message_2eproto[41]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ProjectJ
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ProjectJ::C_VERIFY_TOKEN*
Arena::CreateMaybeMessage< ::ProjectJ::C_VERIFY_TOKEN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_VERIFY_TOKEN >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_VERIFY_TOKEN*
Arena::CreateMaybeMessage< ::ProjectJ::S_VERIFY_TOKEN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_VERIFY_TOKEN >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_LOBBY_CHAT*
Arena::CreateMaybeMessage< ::ProjectJ::C_LOBBY_CHAT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_LOBBY_CHAT >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_LOBBY_CHAT*
Arena::CreateMaybeMessage< ::ProjectJ::S_LOBBY_CHAT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_LOBBY_CHAT >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_LOBBY_REFRESH_ROOM*
Arena::CreateMaybeMessage< ::ProjectJ::C_LOBBY_REFRESH_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_LOBBY_REFRESH_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_LOBBY_REFRESH_ROOM*
Arena::CreateMaybeMessage< ::ProjectJ::S_LOBBY_REFRESH_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_LOBBY_REFRESH_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_LOBBY_CREATE_ROOM*
Arena::CreateMaybeMessage< ::ProjectJ::C_LOBBY_CREATE_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_LOBBY_CREATE_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_LOBBY_CREATE_ROOM*
Arena::CreateMaybeMessage< ::ProjectJ::S_LOBBY_CREATE_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_LOBBY_CREATE_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_LOBBY_ENTER_ROOM*
Arena::CreateMaybeMessage< ::ProjectJ::C_LOBBY_ENTER_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_LOBBY_ENTER_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_LOBBY_ENTER_ROOM*
Arena::CreateMaybeMessage< ::ProjectJ::S_LOBBY_ENTER_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_LOBBY_ENTER_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_ROOM_READY_TO_RECEIVE*
Arena::CreateMaybeMessage< ::ProjectJ::C_ROOM_READY_TO_RECEIVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_ROOM_READY_TO_RECEIVE >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_ROOM_INFO*
Arena::CreateMaybeMessage< ::ProjectJ::S_ROOM_INFO >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_ROOM_INFO >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_ROOM_LEAVE*
Arena::CreateMaybeMessage< ::ProjectJ::C_ROOM_LEAVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_ROOM_LEAVE >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_ROOM_LEAVE*
Arena::CreateMaybeMessage< ::ProjectJ::S_ROOM_LEAVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_ROOM_LEAVE >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_ROOM_OTHER_ENTER*
Arena::CreateMaybeMessage< ::ProjectJ::S_ROOM_OTHER_ENTER >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_ROOM_OTHER_ENTER >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_ROOM_OTHER_LEAVE*
Arena::CreateMaybeMessage< ::ProjectJ::S_ROOM_OTHER_LEAVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_ROOM_OTHER_LEAVE >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_ROOM_READY*
Arena::CreateMaybeMessage< ::ProjectJ::C_ROOM_READY >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_ROOM_READY >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_ROOM_READY*
Arena::CreateMaybeMessage< ::ProjectJ::S_ROOM_READY >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_ROOM_READY >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_ROOM_CHAT*
Arena::CreateMaybeMessage< ::ProjectJ::C_ROOM_CHAT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_ROOM_CHAT >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_ROOM_CHAT*
Arena::CreateMaybeMessage< ::ProjectJ::S_ROOM_CHAT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_ROOM_CHAT >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_ROOM_STANDBY_MATCH*
Arena::CreateMaybeMessage< ::ProjectJ::S_ROOM_STANDBY_MATCH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_ROOM_STANDBY_MATCH >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_ROOM_START_MATCH*
Arena::CreateMaybeMessage< ::ProjectJ::S_ROOM_START_MATCH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_ROOM_START_MATCH >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_MATCH_READY_TO_RECEIVE*
Arena::CreateMaybeMessage< ::ProjectJ::C_MATCH_READY_TO_RECEIVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_MATCH_READY_TO_RECEIVE >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_ALL_READY_TO_RECIEVE*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_ALL_READY_TO_RECIEVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_ALL_READY_TO_RECIEVE >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_ITEM_GENERATED*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_ITEM_GENERATED >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_ITEM_GENERATED >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_MATCH_READY_TO_START*
Arena::CreateMaybeMessage< ::ProjectJ::C_MATCH_READY_TO_START >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_MATCH_READY_TO_START >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_START*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_START >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_START >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_MATCH_INFO_MyInfo*
Arena::CreateMaybeMessage< ::ProjectJ::C_MATCH_INFO_MyInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_MATCH_INFO_MyInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_MATCH_INFO*
Arena::CreateMaybeMessage< ::ProjectJ::C_MATCH_INFO >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_MATCH_INFO >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_INFO*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_INFO >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_INFO >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_END*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_END >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_END >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_MATCH_ITEM_PICKUP*
Arena::CreateMaybeMessage< ::ProjectJ::C_MATCH_ITEM_PICKUP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_MATCH_ITEM_PICKUP >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_MATCH_ITEM_MOVE*
Arena::CreateMaybeMessage< ::ProjectJ::C_MATCH_ITEM_MOVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_MATCH_ITEM_MOVE >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_MATCH_ITEM_DROP*
Arena::CreateMaybeMessage< ::ProjectJ::C_MATCH_ITEM_DROP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_MATCH_ITEM_DROP >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_ITEM_SOMEONE_PICKUP*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_ITEM_SOMEONE_PICKUP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_ITEM_SOMEONE_PICKUP >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_ITEM_SOMEONE_MOVE >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_ITEM_SOMEONE_DROP*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_ITEM_SOMEONE_DROP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_ITEM_SOMEONE_DROP >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_SCALE_ON_CHANGED*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_SCALE_ON_CHANGED >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_SCALE_ON_CHANGED >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_MATCH_CHASER_ATTACK*
Arena::CreateMaybeMessage< ::ProjectJ::C_MATCH_CHASER_ATTACK >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_MATCH_CHASER_ATTACK >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_CHASER_ATTACK*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_CHASER_ATTACK >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_CHASER_ATTACK >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::C_MATCH_CHASER_HIT*
Arena::CreateMaybeMessage< ::ProjectJ::C_MATCH_CHASER_HIT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::C_MATCH_CHASER_HIT >(arena);
}
template<> PROTOBUF_NOINLINE ::ProjectJ::S_MATCH_CHASER_HIT*
Arena::CreateMaybeMessage< ::ProjectJ::S_MATCH_CHASER_HIT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProjectJ::S_MATCH_CHASER_HIT >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
